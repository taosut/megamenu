<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 *
 * @var Mage_Catalog_Block_Product_View $this
 *
 */
?>

<?php
$_helper = $this->helper('catalog/output');
$_product = $this->getProduct();
$oldPriceMain = $_product->getPrice();
$finalPriceMain = $_product->getFinalPrice();
?>

<?php
$catArray = ['553', '552', '548', '636', '637', '554', '541', '549', '555', '540', '543', '542', '544', '781'];
$productCatIds = $_product->getCategoryIds();
$bundleItems = array();
$attributeSetId = $_product->getAttributeSetId();
$relatedItems = $this->getRelatedItems();
?>

<?php
$tagOnlinePaymentIds = Mage::getModel('tag/tag_relation')
    ->setTagId(3)// Giam gia thanh toan online
    ->setStoreId(Mage::app()->getStore()->getId())
    ->getProductIds();
?>

<?php
$_mainProduct = [];
$_productObj = new stdClass();
$_productObj->name = $this->escapeHtml($_product->getName());
$_productObj->id = intval($_product->getId());
$_productObj->price = intval($_product->getFinalPrice());
$_productObj->brand = $_product->getAttributeText('manufacturer');
foreach ($productCatIds as $key => $catId) {
    if ($key === count($productCatIds) - 1) {
        $_cat = Mage::getModel('catalog/category')->setStoreId(Mage::app()->getStore()->getId())->load($catId);
        if ($_cat->getName()) {
            $_productObj->category = $_cat->getName();
        }
    }
}
$_mainProduct[] = $_productObj;
?>

<?php $_productImpressions = []; ?>

<!--Get configurable product child ids to track facebook pixel-->
<?php
$_configChildIds = Mage::getModel('catalog/product_type_configurable')->getChildrenIds($_product->getId());
?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>

<div class="content">
    <input type="hidden" class="is-detail-page" value="1"/>
    
    <!--Breadcrumb-->
    <div class="row tek-breadcrumb">
        <div class="col-md-10 col-md-offset-1 content-section">
            <div class="tek-breadcrumb-content">
            </div>
        </div>
    </div>
    <!--End Breadcrumb-->

    <!--Detail block-->
    <div class="row detail-block">
        <div class="col-md-10 col-md-offset-1 pr-0 content-section">
            <!-- Messages block-->
            <div class="row">
                <div class="col-md-12 col-sm-12 detail-messages-block">
                    <div class="detail-messages cart-messages"></div>
                    <div class="detail-messages purchase-request-messages"></div>
                </div>
            </div>
            <!-- End Messages block-->

            <div class="row">
                <!--Product info-->
                <div class="col-md-9 col-sm-9">
                    <form action="<?php echo $this->getUrl('checkout/cart/addAjax') ?>" method="post"
                          id="product_addtocart_form" <?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
                        <?php echo $this->getBlockHtml('formkey') ?>
                        <input type="hidden" name="product" value="<?php echo $_product->getId() ?>"/>
                        <input type="hidden" name="related_product" id="related-products-field" value=""/>

                        <!--Product common info-->
                        <div class="row product-common-block">
                            <div class="col-md-6 col-sm-6 text-center">
                                <?php echo $this->getChildHtml('media') ?>
                                <span class="add-to-compare-block"
                                      data-product-id="<?php echo $_product->getId(); ?>"
                                      data-attribute-set-id="<?php echo $attributeSetId; ?>"
                                      data-product-name="<?php echo $this->escapeHtml($_product->getName()); ?>"
                                      data-product-url="<?php echo $_product->getProductFullUrl(); ?>"
                                      data-image-url="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(150, 150); ?>">
                                        <div class="compare-checkbox">
                                            <span></span>
                                        </div>
                                        So sánh sản phẩm
                                </span>
                            </div>
                            <div class="col-md-6 col-sm-6">
                                <div class="detail-product-name">
                                    <?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
                                </div>
                                <div class="detail-product-sku">
                                    Mã sản phẩm: <?php echo $_product->getWarehouseSku(); ?>
                                </div>
                                <?php if ($oldPriceMain != $finalPriceMain) : ?>
                                    <div class="detail-ribbon">
                                        -<?php echo number_format(($oldPriceMain - $finalPriceMain) / $oldPriceMain * 100, 0) . "%" ?>
                                    </div>
                                <?php endif; ?>
                                <?php if ($oldPriceMain != $finalPriceMain) : ?>
                                    <div class="detail-product-old-price">
                                        <?php echo number_format($oldPriceMain, 0, ",", ".") . " ₫"; ?>
                                    </div>
                                <?php endif; ?>
                                <div class="detail-product-final-price">
                                    <?php echo number_format($finalPriceMain, 0, ",", ".") . " ₫"; ?>
                                </div>
                                <?php if (in_array($_product->getId(), $tagOnlinePaymentIds)): ?>
                                    <div class="tag-online-payment">
                                        <img src="<?php echo $this->getSkinUrl('images/icon_Notify.svg'); ?>"/>
                                        Chỉ áp dụng đặt hàng online
                                    </div>
                                <?php endif; ?>
                                <?php if ($this->hasOptions()): ?>
                                    <div class="detail-product-included">
                                        <?php if ($_product->getTypeId() == 'bundle'): ?>
                                            <h4 class="detail-product-included-title">
                                                Sản phẩm bao gồm
                                                <?php
                                                $catBuildPC = Mage::getModel('catalog/category')
                                                    ->getCollection()
                                                    ->addAttributeToFilter('url_key', 'build-pc')
                                                    ->getFirstItem();
                                                $childrenIds = $catBuildPC->getResource()->getChildren($catBuildPC);
                                                array_push($childrenIds, $catBuildPC->getId());
                                                ?>
                                                <?php if (count($childrenIds) > 0 && count($productCatIds) > 0): ?>
                                                    <?php if (in_array($catBuildPC->getId(), $productCatIds)): ?>
                                                        <?php
                                                        $bundleCollection = $_product->getTypeInstance(true)
                                                            ->getSelectionsCollection($_product->getTypeInstance(true)->getOptionsIds($_product), $_product);
                                                        foreach ($bundleCollection as $item) {
                                                            $shareArray = array_intersect($item->getCategoryIds(), $catArray);
                                                            if (count($shareArray) > 0) {
                                                                $itemCatId = array_shift($shareArray);
                                                                $productTemp = Mage::getModel('catalog/product')->load($item->getId());
                                                                $itemImageUrl = Mage::helper('catalog/image')->init($productTemp, 'small_image')->resize(150, 150);
                                                                if (isset($itemCatId)) {
                                                                    $bundleItems[] = (object)array(
                                                                        'catId' => $itemCatId,
                                                                        'catUrl' => Mage::getModel('catalog/category')->load($itemCatId)->getUrl(),
                                                                        'productId' => $item->getId(),
                                                                        'productName' => $item->getName(),
                                                                        'productPrice' => intval($item->getFinalPrice()),
                                                                        'productUrl' => $item->getProductFullUrl(),
                                                                        'productImageUrl' => "$itemImageUrl",
                                                                        'productQty' => intval($item->getSelectionQty())
                                                                    );
                                                                }
                                                            }
                                                        }
                                                        ?>
                                                        <button type="button" class="detail-build-pc-btn"
                                                                onclick="customizeBuildPC()">
                                                            Tùy chỉnh <span class="hidden-992">cấu hình</span>
                                                            <img class="detail-build-pc-ajax-loader hidden"
                                                                 src="<?php echo $this->getSkinUrl('images/ajax-loader-white.gif'); ?>"/>
                                                        </button>
                                                    <?php endif; ?>
                                                <?php endif; ?>
                                            </h4>
                                        <?php endif; ?>
                                        <div class="detail-product-included-content">
                                            <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                                        </div>
                                    </div>
                                <?php endif; ?>
                                <div class="detail-product-desc">
                                    <!--                                    <h4 class="detail-product-desc-title">Mô tả</h4>-->
                                    <div class="detail-product-desc-content">
                                        <?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description'); ?>
                                    </div>
                                </div>
                                <?php if (!$this->hasOptions()): ?>
                                    <div class="add-to-box">
                                        <?php echo $this->getChildHtml('addtocart') ?>
                                    </div>
                                <?php endif; ?>
                            </div>
                        </div>
                        <!--End Product common info-->

                        <!-- Product promotion info-->
                        <?php
                        $includedProduct = json_decode($this->helper('catalog/output')->productAttribute($_product, nl2br($_product->getPromotionInfo()), 'promotion_info'));
                        $includedProductIds = [];
                        $includedProductQty = [];
                        if ($includedProduct) {
                            $includedProductIds = json_decode($this->helper('catalog/output')->productAttribute($_product, nl2br($_product->getPromotionInfo()), 'promotion_info'))->promotion_ids;
                            $includedProductQty = json_decode($this->helper('catalog/output')->productAttribute($_product, nl2br($_product->getPromotionInfo()), 'promotion_info'))->promotion_qty;
                        }
                        ?>
                        <?php if (count($includedProductIds) > 0 && count($includedProductQty) > 0): ?>
                            <div class="row included-products-block">
                                <div class="col-md-12 col-sm-12">
                                    <div class="included-products-title">Sản phẩm tặng kèm</div>
                                    <div class="row included-products">
                                        <?php foreach ($includedProductIds as $key => $id): ?>
                                            <?php $_product = Mage::getModel('catalog/product')->load($id); ?>
                                            <div class="col-md-3 col-sm-3">
                                                <a href="<?php echo $_product->getProductFullUrl(); ?>"
                                                   title="<?php echo $this->escapeHtml($_product->getName()); ?>"
                                                   target="_blank">
                                                    <img class="included-product-img"
                                                         alt="<?php echo $this->escapeHtml($_product->getName()); ?>"
                                                         src="<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(300, 300); ?>">
                                                </a>
                                                <a class="included-product-name"
                                                   href="<?php echo $_product->getProductFullUrl(); ?>"
                                                   title="<?php echo $this->escapeHtml($_product->getName()); ?>"
                                                   target="_blank">
                                                    <?php echo $this->escapeHtml($_product->getName()); ?>
                                                </a>
                                                <div class="included-product-price">
                                                    <?php echo number_format($_product->getFinalPrice(), 0, ",", ".") . " ₫"; ?>
                                                </div>
                                                <div class="included-product-qty">
                                                    SL tặng kèm: <?php echo $includedProductQty[$key]; ?>
                                                </div>
                                            </div>
                                        <?php endforeach; ?>
                                    </div>
                                </div>
                            </div>
                        <?php endif; ?>
                        <!-- End product promotion info-->

                        <!--Product tabs-->
                        <div class="row product-tabs-block">
                            <div class="col-md-12">
                                <ul class="nav nav-tabs">
                                    <li class="active">
                                        <a data-toggle="tab" href="#attribute"><span>Thông số kỹ thuật</span></a>
                                    </li>
                                    <li><a data-toggle="tab" href="#description"><span>Tổng quan</span></a></li>
                                    <li><a data-toggle="tab" href="#reviews"><span>Bình luận</span></a></li>
                                </ul>

                                <div class="tab-content">
                                    <div id="attribute" class="tab-pane fade in active">
                                        <?php echo $this->getChildHtml('additional'); ?>
                                    </div>
                                    <div id="description" class="tab-pane fade">
                                        <?php echo $this->getChildHtml('description'); ?>
                                    </div>
                                    <div id="reviews" class="tab-pane fade">
                                        <div class="fb-comments" data-order-by="reverse_time"
                                             data-href="<?php echo explode('?', $_product->getProductFullUrl())[0]; ?>"
                                             data-numposts="5" data-width="100%"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--End Product tabs-->

                        <!--Related products-->
                        <div class="row related-products-block">
                            <div class="col-md-12">
                                <div class="related-products-title">Khách hàng cũng quan tâm</div>
                                <div class="row related-products">
                                    <?php foreach ($relatedItems as $_item): ?>
                                        <?php
                                        $_productObj = new stdClass();
                                        $_productObj->name = $this->escapeHtml($_item->getName());
                                        $_productObj->id = intval($_item->getId());
                                        $_productObj->price = intval($_item->getFinalPrice());
                                        $_productObj->list = 'Detail Page';
                                        $_productImpressions[] = $_productObj;
                                        ?>
                                        <?php
                                        $oldPrice = $_item->getPrice();
                                        $finalPrice = $_item->getFinalPrice();
                                        ?>
                                        <div class="col-md-3">
                                            <a href="<?php echo $_item->getProductFullUrl(); ?>"
                                               onclick="trackProductClicks(this);"
                                               data-id="<?php echo $_item->getId(); ?>"
                                               data-name="<?php echo $this->escapeHtml($_item->getName()); ?>"
                                               data-price="<?php echo $_item->getFinalPrice(); ?>"
                                            >
                                                <img class="related-product-img"
                                                     title="<?php echo $this->escapeHtml($_item->getName()); ?>"
                                                     alt="<?php echo $this->escapeHtml($_item->getName()) ?>"
                                                     src="<?php echo $this->helper('catalog/image')->init($_item, 'thumbnail')->resize(300); ?>">
                                            </a>
                                            <a class="related-product-name"
                                               onclick="trackProductClicks(this);"
                                               data-id="<?php echo $_item->getId(); ?>"
                                               data-name="<?php echo $this->escapeHtml($_item->getName()); ?>"
                                               data-price="<?php echo $_item->getFinalPrice(); ?>"
                                               href="<?php echo $_item->getProductFullUrl(); ?>"
                                               title="<?php echo $this->escapeHtml($_item->getName()); ?>"
                                            >
                                                <?php echo $this->escapeHtml($_item->getName()) ?>
                                            </a>
                                            <div class="related-product-rate"></div>
                                            <div class="related-product-final-price"><?php echo number_format($finalPrice, 0, ",", ".") . " ₫"; ?></div>
                                            <div class="related-product-old-price">
                                                <?php if ($oldPrice != $finalPrice) : ?>
                                                    <?php echo number_format($oldPrice, 0, ",", ".") . " ₫"; ?>
                                                <?php endif; ?>
                                            </div>
                                            <?php
                                            $addToCartUrl = ($_item->getTypeId() == 'simple') ? Mage::helper('checkout/cart')->getAddUrl($_item) : $_item->getProductFullUrl();
                                            ?>
                                            <button type="button"
                                                    class="related-action-btn related-add-to-cart-btn add-to-cart-from-list-btn"
                                                    data-product-name="<?php echo $this->escapeHtml($_product->getName()); ?>"
                                                    data-product-id="<?php echo intval($_product->getId()); ?>"
                                                    data-product-price="<?php echo intval($_product->getFinalPrice()); ?>"
                                                    data-product-type="<?php echo $_product->getTypeId(); ?>"
                                                    data-add-to-cart-url="<?php echo $addToCartUrl; ?>"
                                            >
                                                Thêm vào giỏ hàng
                                                <img class="add-to-cart-from-list-icon related-add-to-cart-icon hidden-1200"
                                                     src="<?php echo $this->getSkinUrl('images/icon_ShoppingCart2.svg'); ?>"/>
                                                <img class="add-to-cart-from-list-ajax-loader hidden"
                                                     src="<?php echo $this->getSkinUrl('images/ajax-loader-white.gif'); ?>"/>
                                            </button>
                                            <?php $relatedAttributeSetId = $_item->getAttributeSetId(); ?>
                                            <span class="add-to-compare-block-relate related-add-to-compare-block"
                                                  data-product-id="<?php echo $_item->getId(); ?>"
                                                  data-attribute-set-id="<?php echo $relatedAttributeSetId; ?>"
                                                  data-product-name="<?php echo $this->escapeHtml($_item->getName()); ?>"
                                                  data-product-url="<?php echo $_item->getProductFullUrl(); ?>"
                                                  data-image-url="<?php echo $this->helper('catalog/image')->init($_item, 'small_image')->resize(150, 150); ?>"
                                            >
                                                <div class="compare-relate" id="cp<?php echo $_item->getId(); ?>">
                                                    <span></span>
                                                </div>
                                                So sánh
                                            </span>
                                        </div>
                                    <?php endforeach; ?>
                                </div>
                            </div>
                        </div>
                        <!--End Related products-->
                    </form>
                </div>
                <!--End Product info-->

                <!--Right cart, banner-->
                <div class="col-md-3 col-sm-3 detail-right-block">
                    <div class="right-cart">
                        <div class="cart-header">
                            <img class="cart-header-icon"
                                 src="<?php echo $this->getSkinUrl('images/icon_ShoppingCartWhite.svg'); ?>"/>
                            Giỏ hàng
                            <img class="cart-header-ajax-loader hidden"
                                 src="<?php echo $this->getSkinUrl('images/ajax-loader-white.gif'); ?>"/>
                        </div>
                        <div class="cart-content">
                            <?php echo $this->getChildHtml('rightCart'); ?>
                        </div>
                    </div>
                    <div class="detail-right-banner-block">
                        <?php echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail-right-banner-v2')->toHtml(); ?>
                    </div>
                </div>
                <!--End Right cart, banner-->
            </div>
        </div>
    </div>
    <!--End Detail block-->

    <!-- Detail header scroll block-->
    <div class="row detail-header-scroll-block">
        <div class="col-md-10 col-md-offset-1 pr-0 content-section detail-header-scroll">
            <div class="detail-header-scroll-left">
                <div class="detail-header-scroll-name">
                    <?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?>
                </div>
                <div class="detail-header-scroll-tabs">
                    <span data-id="attribute" class="active">Thông số kỹ thuật</span>
                    <span data-id="description">Tổng quan</span>
                    <span data-id="reviews">Bình luận</span>
                </div>
            </div>
            <div class="detail-header-scroll-btn">
                <?php if (in_array($_product->getInstock(), array(1, 6))): ?>
                    <button type="button" class="detail-header-add-to-cart-btn" onclick="addToCart();">
                        Thêm vào giỏ hàng
                        <img class="add-to-cart-ajax-loader hidden"
                             src="<?php echo $this->getSkinUrl('images/ajax-loader-white.gif'); ?>"/>
                    </button>
                <?php else: ?>
                    <span class="label label-danger label-out-of-stock label-out-of-stock-header">
                        <?php echo $_product->getInstock() == 3 ? 'Tạm hết hàng' : 'Hàng sắp về'; ?>
                    </span>
                    <button type="button" class="detail-action-btn require-purchase-btn" data-toggle="modal"
                            data-target="#purchaseRequestModal">
                        Đặt hàng trước
                    </button>
                <?php endif; ?>
            </div>
        </div>
    </div>
    <!-- End Detail header scroll block-->
</div>

<script type="text/javascript">
    var $j = jQuery.noConflict();
    var shipping_fee = 0;
    var mainProduct = <?php echo json_encode($_mainProduct); ?>;

    /** Track facebook pixel ViewContent **/
    var contentIds = [mainProduct[0]['id'].toString()];
    var contentType = 'product';
    var productType = '<?php echo $_product->getTypeId(); ?>';
    if (productType == 'configurable') {
        contentIds = <?php echo json_encode($_configChildIds[0]); ?>;
        contentType = 'product_group';
        contentIds = $j.map(contentIds, function (value, index) {
            return [value];
        });
    }

    dataLayer.push({
        'contentIds': contentIds, // top 5-10 results
        'contentType': contentType,
        'value': mainProduct[0]['price']
    });
    /** End track facebook pixel ViewContent **/

    /** Enhanced Ecommerce features **/
    /** Track product detail view **/
    dataLayer.push({
        'event': 'viewDetail',
        'ecommerce': {
            'detail': {
                'actionField': {'list': '<?php echo !is_array($_product->getAttributeText('manufacturer')) ? $_product->getAttributeText('manufacturer') : $_product->getAttributeText('manufacturer')[0]; ?>'},
                'products': mainProduct
            }
        }
    });

    /** Track product impressions  **/
    var productImpressions = <?php echo json_encode($_productImpressions); ?>;
    dataLayer.push({
        'event': 'productImpressions',
        'ecommerce': {
            'currencyCode': 'VND',
            'impressions': productImpressions
        }
    });

    /** Track product clicks **/
    function trackProductClicks(value) {
        var productId = $j(value).data('id');
        var productName = $j(value).data('name');
        var productPrice = parseInt($j(value).data('price'));

        dataLayer.push({
            'event': 'productClick',
            'ecommerce': {
                'click': {
                    'actionField': {'list': 'Detail Page'},
                    'products': [{
                        'id': productId,
                        'name': productName,
                        'price': productPrice
                    }]
                }
            }
        });
    }

    /** Track promotion views (Detail right banner) **/
    var promotionImpressions = [];
    $j('.detail-right-banner-block img').each(function () {
        promotionImpressions.push({
            'id': $j(this).attr('alt'),
            'name': $j(this).attr('alt'),
            'position': 'Detail Right Banner'
        });
    });
    dataLayer.push({
        'event': 'promotionImpressions',
        'ecommerce': {
            'promoView': {
                'promotions': promotionImpressions
            }
        }
    });

    /** Track promotion clicks (Detail right banner) **/
    $j('.detail-right-banner-block img').click(function () {
        dataLayer.push({
            'event': 'promotionClick',
            'ecommerce': {
                'promoClick': {
                    'promotions': [{
                        'id': $j(this).attr('alt'),
                        'name': $j(this).attr('alt'),
                        'position': 'Detail Right Banner'
                    }]
                }
            }
        });
    });
    /** End Enhanced Ecommerce features **/

    /** Check message from outsite add to cart **/
    var addToCartErrorMessage = localStorage.getItem("addToCartErrorMessage");

    if (addToCartErrorMessage) {
        if (addToCartErrorMessage === 'Vui lòng lựa chọn thuộc tính sản phẩm!') {
            $j('.cart-messages').append('<div class="alert alert-danger"><strong>Có lỗi!</strong> ' + addToCartErrorMessage + '</div>');
        } else {
            $j('.cart-messages').append('<div class="alert alert-warning"><strong>Lưu ý!</strong> ' + addToCartErrorMessage + '</div>');
        }
        localStorage.removeItem("addToCartErrorMessage");
    }
    /** End check message from outsite add to cart **/

    /** Send purchase request **/
    function sendPurchaseRequest() {
        var require_name = $j("#require-name").val().trim();
        var require_phone = $j("#require-phone").val().trim();
        var require_content = $j("#require-content").val().trim();
        var require_product_id = $j("#require-product-id").val().trim();
        var require_product_name = $j("#require-product-name").val().trim();

        var url = "<?php echo $this->getUrl('stockrequest/stockrequest/saveRequest');  ?>";
        var data = {
            user_name: require_name,
            phone_number: require_phone,
            request_content: require_content,
            product_id: require_product_id,
            product_name: require_product_name
        };

        if (require_name === '') {
            alert('Vui lòng nhập họ tên');
        } else if (require_phone === '') {
            alert('Vui lòng nhập số điện thoại');
        } else if (require_phone !== '' && !validateVNPhoneNumber(require_phone)) {
            alert('Số điện thoại không đúng định dạng (phải có dạng 84xxx hoặc 0xxx, chứa 10 hoặc 11 ký tự)');
        } else if (require_content === '') {
            alert('Vui lòng nhập nội dung cần yêu cầu');
        } else {
            $j('.ajax-loader-pr').show();
            $j('.btn-send-request').prop('disabled', true);
            $j.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: "json"
            }).done(function (data) {
                $j('.ajax-loader-pr').hide();
                $j('#purchaseRequestModal').modal('hide');
                $j('.btn-send-request').prop('disabled', false);
                $j('.detail-messages').empty();
                if (data.success_message) {
                    $j('.purchase-request-messages').append('<div class="alert alert-success"><strong>Thành công!</strong> ' + data.success_message + '</div>');
                } else if (data.error_message) {
                    $j('.purchase-request-messages').append('<div class="alert alert-danger"><strong>Có lỗi!</strong> ' + data.error_message + '</div>');
                }
                $j('html, body').animate({scrollTop: 0}, 400);
            });
        }
    }
    /** End send purchase request **/

    /** Click customize PC **/
    function setStorage(key, value) {
        var expires = (24 * 60 * 60);  // default: seconds for 1 day
        var now = Date.now();  //millisecs since epoch time, lets deal only with integer
        var schedule = now + expires * 1000;
        try {
            localStorage.setItem(key, value);
            localStorage.setItem(key + '_expiresIn', schedule);
        } catch (e) {
            return false;
        }
        return true;
    }

    function customizeBuildPC() {
        $j('.detail-build-pc-btn').prop('disabled', true);
        $j('.detail-build-pc-ajax-loader').removeClass('hidden');

        var bundleItems = <?php echo json_encode($bundleItems) ?>;

        setStorage("build_pc_array", JSON.stringify(bundleItems));
        window.location.href = '<?php echo $this->getUrl('buildpc') ?>';
    }
    /** End click customize PC **/

    /** Wishlist functions **/
    function addToWishlist() {
        var isLogin = $j('.isLogin').val();
        if (isLogin) {
            $j('.favorite-ajax-loader').removeClass('hidden');
            $j('.favorite-btn').prop('disabled', true);
            var product = $j('.favorite-btn').data('product-id');

            $j.ajax({
                type: "POST",
                url: '<?php echo $this->getUrl('favourite/index/addToWishlist') ?>',
                data: {
                    'product': product
                },
                success: function (data) {
                    $j('.favorite-ajax-loader').addClass('hidden');
                    $j('.favorite-btn').prop('disabled', false);
                    data = JSON.parse(data);
                    if (data['success']) {
                        $j('.favorite-btn-text').text('Đã thích');
                        $j('.add-to-wish-list').toggleClass('add-to-wish-list remove-from-wish-list');
                        swal("Thành công!", data.success);
                    } else {
                        swal("Không thành công!", data.failed, "error");
                    }
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $j('.favorite-ajax-loader').addClass('hidden');
                    $j('.favorite-btn').prop('disabled', false);
                    console.log("Status: " + textStatus);
                    console.log("Error: " + errorThrown);
                }
            });
        } else {
            $j('#loginModal').modal();
            return false;
        }
    }

    function removeFromWishlist() {
        $j('.favorite-ajax-loader').removeClass('hidden');
        $j('.favorite-btn').prop('disabled', true);
        var product = $j('.favorite-btn').data('product-id');

        $j.ajax({
            type: "POST",
            url: '<?php echo $this->getUrl('favourite/index/removeFromDetail') ?>',
            data: {
                'product': product
            },
            success: function (data) {
                $j('.favorite-ajax-loader').addClass('hidden');
                $j('.favorite-btn').prop('disabled', false);
                data = JSON.parse(data);
                if (data['success']) {
                    $j('.favorite-btn-text').text('Yêu thích');
                    $j('.remove-from-wish-list').toggleClass('add-to-wish-list remove-from-wish-list');
                    swal("Thành công!", data.success);
                } else {
                    swal("Không thành công!", data.failed, "error");
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $j('.favorite-ajax-loader').addClass('hidden');
                $j('.favorite-btn').prop('disabled', false);
                console.log("Status: " + textStatus);
                console.log("Error: " + errorThrown);
            }
        });
    }

    $j('.favorite-btn').bind('click', function (e) {
        if ($j(this).hasClass('add-to-wish-list')) {
            addToWishlist();
            e.stopPropagation();
        }
        if ($j(this).hasClass('remove-from-wish-list')) {
            removeFromWishlist();
            e.stopPropagation();
        }
        e.preventDefault();
    });
    /** End Wishlist functions **/

    /** Share functions **/
    $j('.share-btn').bind('click', function (e) {
        shareFB();
        e.preventDefault();
        e.stopPropagation();
    });

    function shareFB() {
        FB.ui({
            method: 'feed',
            link: '<?php echo Mage::helper('core/url')->getCurrentUrl(); ?>'
        }, function (response) {
        });
    }
    /** End share functions **/

    /** Compare functions **/
    $j(document).ready(function () {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        var productId = $j('.add-to-compare-block').attr('data-product-id');
        if (compareList && compareList.listItem) {
            var listItem = compareList.listItem;
            var isInside = 0;
            if (listItem.length) {
                for (var i = 0; i < listItem.length; i++) {
                    $j('#cp' + listItem[i].product_id).html("<span>&#10003;</span>");
                    if (Number(productId) === Number(listItem[i].product_id)) {
                        isInside = 1;
                    }
                }
            }
            if (isInside) {
                $j('.compare-checkbox').html("<span>&#10003;</span >");
            }
        }
    });

    checkCompareListCount();

    $j('.add-to-compare-block-relate').click(function (e) {
        var addToCompareCheckbox = $j(this).find('input');
        addToCompareCheckbox.prop("checked", !addToCompareCheckbox.prop("checked"));
        var productId = $j(this).data('product-id');
        var attributeSetId = $j(this).data('attribute-set-id');
        var productName = $j(this).data('product-name');
        var productUrl = $j(this).data('product-url');
        var imageUrl = $j(this).data('image-url');
        addProductToCompareRelate(productId, attributeSetId, productName, productUrl, imageUrl);
        e.stopPropagation();
        e.preventDefault();
    });

    function addProductToCompareRelate(productId, attributeSetId, productName, productUrl, imageUrl) {
        var attributeCode = attributeSetId;
        var compareList = localStorage.getItem('compareList');
        if (!compareList) {
            compareList = {};
            compareList.attributeCode = attributeCode;
            compareList.listItem = [];
        } else {
            compareList = JSON.parse(compareList);
            if (compareList.attributeCode) {
                if (compareList.attributeCode != attributeCode && compareList.listItem.length > 0) {
                    swal({
                        title: "Không thành công",
                        text: "Sản phẩm phải cùng thuộc tính với danh sách so sánh",
                        type: "error",
                        showConfirmButton: false
                    });
                    setTimeout(function () {
                        swal.close();
                    }, 2000);
                    $j('#compare-list').modal('show');
                    return false;
                }
            } else {
                compareList.attributeCode = attributeCode;
            }
        }

        var listItem = compareList.listItem;
        var itemNameArray = [];
        for (var i = 0; i < listItem.length; i++) {
            itemNameArray.push(listItem[i].name);
        }
        var isNew = 1;
        if (listItem.length) {
            for (var i = 0; i < listItem.length; i++) {
                if (productId === listItem.product_id) {
                    isNew = 0;
                    break;
                }
            }
        }
        if (isNew) {
            $j('#cp' + productId).html("<span>&#10003;</span >");
        }

        var currentItem = {
            'url': productUrl,
            'product_id': productId,
            'image_url': imageUrl,
            'name': productName
        };

        if (listItem.length < 4) {
            if (listItem.length == 0) {
                compareList.attributeCode = attributeCode;
            }

            if (itemNameArray.indexOf(currentItem.name) === -1) {
                compareList.listItem.push(currentItem);
            }
            compareList = JSON.stringify(compareList);
            localStorage.removeItem('compareList');
            localStorage.setItem('compareList', compareList);
            renderCompareList();
        } else {
            if (itemNameArray.indexOf(currentItem.name) === -1) {
                swal({
                    title: 'Không thành công',
                    text: 'Chỉ so sánh được tối đa 4 sản phẩm cùng lúc',
                    type: "error",
                    showConfirmButton: false
                });
                setTimeout(function () {
                    swal.close();
                }, 2000);
            }
        }
        $j('#compare-list').modal('show');
        checkCompareListCount();
    }


    $j('.add-to-compare-block').click(function (e) {
        var addToCompareCheckbox = $j(this).find('input');
        addToCompareCheckbox.prop("checked", !addToCompareCheckbox.prop("checked"));
        var productId = $j(this).data('product-id');
        var attributeSetId = $j(this).data('attribute-set-id');
        var productName = $j(this).data('product-name');
        var productUrl = $j(this).data('product-url');
        var imageUrl = $j(this).data('image-url');
        addProductToCompare(productId, attributeSetId, productName, productUrl, imageUrl);
        e.stopPropagation();
        e.preventDefault();
    });

    function addProductToCompare(productId, attributeSetId, productName, productUrl, imageUrl) {
        // Edit add to compare for view
        var attributeCode = attributeSetId;
        var compareList = localStorage.getItem('compareList');
        if (!compareList) {
            compareList = {};
            compareList.attributeCode = attributeCode;
            compareList.listItem = [];
        } else {
            compareList = JSON.parse(compareList);
            if (compareList.attributeCode != attributeCode && compareList.listItem.length > 0) {
                swal({
                    title: "Không thành công",
                    text: "Sản phẩm phải cùng thuộc tính với danh sách so sánh",
                    type: "error",
                    showConfirmButton: false
                });
                setTimeout(function () {
                    swal.close();
                }, 2000);
                $j('#compare-list').modal('show');
                return false;
            }
        }

        var listItem = compareList.listItem;
        var itemNameArray = [];
        for (var i = 0; i < listItem.length; i++) {
            itemNameArray.push(listItem[i].name);
        }
        var isNew = 1;
        if (listItem.length) {
            for (var i = 0; i < listItem.length; i++) {
                if (productId === listItem.product_id) {
                    isNew = 0;
                    break;
                }
            }
        }
        if (isNew) {
            $j('.compare-checkbox').html("<span>&#10003;</span >");
        }

        var currentItem = {
            'url': productUrl,
            'product_id': productId,
            'image_url': imageUrl,
            'name': productName
        };

        if (listItem.length < 4) {
            if (listItem.length == 0) {
                compareList.attributeCode = attributeCode;
            }

            if (itemNameArray.indexOf(currentItem.name) === -1) {
                compareList.listItem.push(currentItem);
            }
            compareList = JSON.stringify(compareList);
            localStorage.removeItem('compareList');
            localStorage.setItem('compareList', compareList);
            renderCompareList();
        } else {
            if (itemNameArray.indexOf(currentItem.name) === -1) {
                swal({
                    title: 'Không thành công',
                    text: 'Chỉ so sánh được tối đa 4 sản phẩm cùng lúc',
                    type: "error",
                    showConfirmButton: false
                });
                setTimeout(function () {
                    swal.close();
                }, 2000);
            }
        }

        $j('#compare-list').modal('show');
        checkCompareListCount();
    }

    $j('.compare-btn').click(function () {
        var compareList = JSON.parse(localStorage.getItem('compareList'));

        var itemParams = [];
        compareList.listItem.forEach(function (item) {
            itemParams.push({
                'product_id': item.product_id
            });
        });
        compareList.listItem = itemParams;
        var params = btoa(unescape(encodeURIComponent(JSON.stringify(compareList))));
        window.open("<?php echo $this->getUrl('compare/index/compare') ?>?data=" + params, '_blank');
    });

    function checkCompareListCount() {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        if (compareList) {
            var listItem = compareList.listItem;
            if (listItem.length >= 2) {
                $j('.compare-btn').removeClass('hidden');
            }
            else {
                $j('.compare-btn').addClass('hidden');
            }
        }
    }

    renderCompareList();

    function renderCompareList() {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        if (compareList && compareList.listItem) {
            var listItem = compareList.listItem;
            if (listItem.length > 0) {
                var content = "";
                listItem.forEach(function (item) {
                    content = content +
                        '<div class="col-md-12 col-sm-12 cp-panel-row" id="item' + item.product_id + '">' +
                        '<div class="col-md-2 col-sm-2 cp-panel-img">' +
                        '<img src="' + item.image_url + '">' +
                        '</div>' +
                        '<div class="col-md-9 col-sm-9 cp-panel-product-name">' +
                        '<a href="' + item.url + '" target="_blank">' + item.name + '</a>' +
                        '</div>' +
                        '<div class="col-md-1 col-sm-1 cp-remove-btn">' +
                        '<i class="fa fa-trash-o" data-product-id="' + item.product_id + '"></i>' +
                        '</div>' +
                        '</div>'
                });
                $j('.cp-panel-content').html(content);
            }
        }
    }

    $j('.cp-panel-content').on('click', '.cp-remove-btn i', function () {
        var productId = $j(this).data('product-id');
        var currentId = $j(".add-to-compare-block").attr("data-product-id");
        if (Number(currentId) === Number(productId)) {
            $j('.compare-checkbox').html("<span></span >");
        }
        // if delete in related product
        $j('#cp' + productId).html("<span></span>");
        //

        var compareList = JSON.parse(localStorage.getItem('compareList'));
        var listItem = compareList.listItem;
        var newList = [];
        listItem.forEach(function (item) {
            if (item.product_id != productId) {
                newList.push(item);
            }
        });
        compareList.listItem = newList;
        localStorage.setItem('compareList', JSON.stringify(compareList));
        $j('#item' + productId).hide();
        checkCompareListCount();
    });
    /** End compare functions **/

    /** Change price configurable product **/
    $j('.product-options').find("select").each(function (index) {
        $j(this).change(function () {
            var price = <?php echo $finalPriceMain; ?>;
            $j('.product-options').find("select").each(function (index, item) {
                var priceChange = parseInt($j(item).find(":selected").attr("price"));
                if (isNaN(priceChange)) {
                    priceChange = 0;
                }
                price += priceChange;
            });
            if (isNaN(price)) {
                price = <?php echo $finalPriceMain; ?>;
            }
            $j('.detail-product-final-price').html(formatCurrency(price) + " ₫");
        });
    });
    /** End Change price configurable product **/

    /** Cart functions **/
    var qty_val = $j('.qty-input').val();
    if (qty_val == 0) {
        $j('.qty-input').val(1);
    }

    $j('.qty-btn').click(function () {

        var $button = $j(this);
        var oldValue = $j('.qty-input').val();

        if ($button.text() == '+') {
            var newVal = parseInt(oldValue) + 1;
        } else {
            // Don't allow decrementing below zero
            if (oldValue > 1) {
                newVal = parseInt(oldValue) - 1;
            } else {
                newVal = 1;
            }
        }

        $j('.qty-input').val(newVal);
    });

    /** Add to cart **/
    function addToCart() {
        $j('.cart-checkout-btn').prop('disabled', true);
        $j('.add-to-cart-btn').prop('disabled', true);
        $j('.detail-header-add-to-cart-btn').prop('disabled', true);
        $j('.add-to-cart-btn-icon').addClass('hidden');
        $j('.add-to-cart-ajax-loader').removeClass('hidden');
        $j('.cart-product-qty-input').prop('readonly', true);
        $j('.cart-coupon-input').prop('readonly', true);
        $j('.cart-remove-icon').addClass('hidden');

        var input_qty = $j('.qty-input').val();
        if (input_qty == 0) {
            $j('.qty-input').val(1);
        }
        if (input_qty > 500) {
            $j('.qty-input').val(500);
        }
        var form = $j('#product_addtocart_form');
        var data = form.serializeArray();

        /** Track facebook pixel AddToCart **/
        dataLayer.push({
            'contentIds': [mainProduct[0]['id'].toString()],
            'value': mainProduct[0]['price']
        });

        /** Track add to cart **/
        var purchaseQty = $j('.qty-input').val();
        dataLayer.push({
            'event': 'addToCart',
            'ecommerce': {
                'currencyCode': 'VND',
                'add': {
                    'products': [{
                        'name': <?php echo json_encode($_product->getName()); ?>,
                        'id': <?php echo intval($_product->getId()); ?>,
                        'price': <?php echo intval($_product->getFinalPrice()); ?>,
                        'quantity': purchaseQty
                    }]
                }
            }
        });

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {
                $j('.cart-checkout-btn').prop('disabled', false);
                $j('.add-to-cart-btn').prop('disabled', false);
                $j('.detail-header-add-to-cart-btn').prop('disabled', false);
                $j('.add-to-cart-btn-icon').removeClass('hidden');
                $j('.add-to-cart-ajax-loader').addClass('hidden');
                $j('.cart-product-qty-input').prop('readonly', false);
                $j('.cart-coupon-input').prop('readonly', false);
                $j('.cart-remove-icon').removeClass('hidden');

                if (response.message !== '') {
                    $j('.detail-messages').empty();
                    if (response.error_flg == 0) {
                        $j('.cart-messages').append('<div class="alert alert-success"><strong>Thành công!</strong> ' + response.message + '</div>');
                    }
                    else {
                        if (response.message == 'Please specify the product\'s option(s).') {
                            response.message = 'Vui lòng lựa chọn thuộc tính sản phẩm!';
                        }
                        $j('.cart-messages').append('<div class="alert alert-danger"><strong>Có lỗi!</strong> ' + response.message + '</div>');
                        $j('html, body').animate({scrollTop: 0}, 400);
                    }
                }

                // Update shopping cart body
                $j('.cart-content').empty().append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty().append(response.ex_header_html);

                // Update shopping cart footer
                $j('#shopping-cart-footer').empty().append(response.footer_cart_html);

                $j('.mini-cart').click(function (e) {
                    e.stopPropagation();
                });

                if ($j(window).scrollTop() > $j('.add-to-cart-btn').offset().top - 80) {
                    $j('.mini-cart').css('right', '0');
                }
                else {
                    $j('html, body').animate({scrollTop: 0}, 400);
                }
                // checkShippingFee();
                checkCouponCode();
                preventKeyInput();
            }
        });
    }

    /** Update cart **/
    var timeout_update = null;
    function doUpdateCart(value) {
        var id = $j(value).data('id');
        $j('.cart-checkout-btn').prop('disabled', true);
        $j('.add-to-cart-btn').prop('disabled', true);
        $j('.cart-header-ajax-loader').removeClass('hidden');
        $j('.cart-product-qty-input').prop('readonly', true);
        $j('.cart-coupon-input').prop('readonly', true);
        $j('#cart-product-qty-input-' + id).prop('readonly', false);
        $j('.cart-remove-icon').addClass('hidden');

        var productId = parseInt($j(value).data('product-id'));
        var productName = $j(value).data('name');
        var productPrice = parseInt($j(value).data('price'));
        var productQty = parseInt($j(value).data('qty'));
        var newQty = parseInt($j('#cart-product-qty-input-' + id).val());

        if (timeout_update) {
            clearTimeout(timeout_update);
        }
        timeout_update = setTimeout(function () {
            updateCart(productId, productName, productPrice, productQty, newQty);
        }, 1000);
    }

    function updateCart(productId, productName, productPrice, productQty, newQty) {
        var form = $j('#cart-qty-form');
        var data = form.serializeArray();

        /** Track add to cart / remove from cart **/
        if (newQty > productQty) {
            dataLayer.push({
                'event': 'addToCart',
                'ecommerce': {
                    'currencyCode': 'VND',
                    'add': {
                        'products': [{
                            'name': productName,
                            'id': productId,
                            'price': productPrice,
                            'quantity': newQty - productQty
                        }]
                    }
                }
            });
        }
        else if (newQty < productQty) {
            dataLayer.push({
                'event': 'removeFromCart',
                'ecommerce': {
                    'currencyCode': 'VND',
                    'remove': {
                        'products': [{
                            'name': productName,
                            'id': productId,
                            'price': productPrice,
                            'quantity': productQty - newQty
                        }]
                    }
                }
            });
        }

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {
                $j('.cart-checkout-btn').prop('disabled', false);
                $j('.add-to-cart-btn').prop('disabled', false);
                $j('.cart-header-ajax-loader').addClass('hidden');
                $j('.cart-product-qty-input').prop('readonly', false);
                $j('.cart-coupon-input').prop('readonly', false);
                $j('.cart-remove-icon').removeClass('hidden');

                if (response.message !== '') {
                    $j('.detail-messages').empty();
                    if (!response.ajax_cart_is_updated) {
                        $j('.cart-messages').append('<div class="alert alert-danger"><strong>Có lỗi!</strong> ' + response.message + '</div>');
                    }
                    else {
                        $j('.cart-messages').append('<div class="alert alert-success"><strong>Thành công!</strong> ' + response.message + '</div>');
                    }
                }

                // Update shopping cart body
                $j('.cart-content').empty().append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty().append(response.ex_header_html);

                // Update shopping cart footer
                $j('#shopping-cart-footer').empty().append(response.footer_cart_html);

                $j('.mini-cart').click(function (e) {
                    e.stopPropagation();
                });

                $j('html, body').animate({scrollTop: 0}, 400);
                checkCouponCode();
                preventKeyInput();
            }
        });
    }

    /** Delete item from cart **/
    function deleteItem(value) {
        var id = $j(value).data('id');
        var url = $j(value).data('url');
        var productId = parseInt($j(value).data('product-id'));
        var productName = $j(value).data('name');
        var productPrice = parseInt($j(value).data('price'));
        var productQty = parseInt($j(value).data('qty'));

        $j('.cart-checkout-btn').prop('disabled', true);
        $j('.add-to-cart-btn').prop('disabled', true);
        $j('.cart-product-qty-input').prop('readonly', true);
        $j('.cart-coupon-input').prop('readonly', true);
        $j('#cart-remove-icon-' + id).addClass('hidden');
        $j('#cart-remove-ajax-loader-' + id).removeClass('hidden');

        /** Track remove from cart **/
        dataLayer.push({
            'event': 'removeFromCart',
            'ecommerce': {
                'currencyCode': 'VND',
                'remove': {                               // 'remove' actionFieldObject measures.
                    'products': [{                          //  removing a product to a shopping cart.
                        'name': productName,
                        'id': productId,
                        'price': productPrice,
                        'quantity': productQty
                    }]
                }
            }
        });

        $j.ajax({
            url: url,
            type: "POST",
            dataType: 'json',
            success: function (response) {
                $j('.cart-checkout-btn').prop('disabled', false);
                $j('.add-to-cart-btn').prop('disabled', false);
                $j('.cart-product-qty-input').prop('readonly', false);
                $j('.cart-coupon-input').prop('readonly', false);

                if (response.message !== '') {
                    $j('.detail-messages').empty();
                    if (response.error_flg == 1) {
                        $j('.cart-messages').append('<div class="alert alert-danger"><strong>Có lỗi!</strong> ' + response.message + '</div>');
                    }
                    else {
                        $j('.cart-messages').append('<div class="alert alert-success"><strong>Thành công!</strong> ' + response.message + '</div>');
                    }
                }

                // Update shopping cart body
                $j('.cart-content').empty().append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty().append(response.ex_header_html);

                // Update shopping cart footer
                $j('#shopping-cart-footer').empty().append(response.footer_cart_html);

                $j('.mini-cart').click(function (e) {
                    e.stopPropagation();
                });

                $j('html, body').animate({scrollTop: 0}, 400);
                checkCouponCode();
                preventKeyInput();
            }
        });
    }
    /** End cart functions **/

    /** Start coupon functions **/
    checkCouponCode();

    var timeout = null;

    function doCouponPost() {
        $j('.cart-coupon-ajax-loader').removeClass('hidden');
        $j('.add-to-cart-btn').prop('disabled', true);
        $j('.cart-product-qty-input').prop('readonly', true);
        $j('.cart-checkout-btn').prop('disabled', true);
        $j('.cart-remove-icon').addClass('hidden');
        $j('.remove-coupon-btn').addClass('hidden');

        if ($j('.cart-coupon-input').val() !== '') {
            if (timeout) {
                clearTimeout(timeout);
            }
            timeout = setTimeout(function () {
                applyCouponCode(false); // false: not remove coupon code
            }, 1000);
        }
        else {
            $j('.cart-coupon-ajax-loader').addClass('hidden');
            $j('.remove-coupon-btn').addClass('hidden');
            $j('.add-to-cart-btn').prop('disabled', false);
            $j('.cart-product-qty-input').prop('readonly', false);
            $j('.cart-checkout-btn').prop('disabled', false);
            $j('.cart-remove-icon').removeClass('hidden');
            $j('.invalid-coupon').empty();
        }
    }

    function applyCouponCode(isRemove) {
        $j('.cart-coupon-ajax-loader').removeClass('hidden');
        $j('.add-to-cart-btn').prop('disabled', true);
        $j('.cart-product-qty-input').prop('readonly', true);
        $j('.cart-checkout-btn').prop('disabled', true);
        $j('.cart-remove-icon').addClass('hidden');

        if (isRemove) {
            $j('#remove-coupon').val(1);
        } else {
            $j('#remove-coupon').val(0);
        }

        var form = $j('#discount-coupon-form');
        var data = form.serializeArray();
        var total_free_item_price = $j('#total-free-item-price').val();

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {
                $j('.cart-coupon-ajax-loader').addClass('hidden');
                $j('.add-to-cart-btn').prop('disabled', false);
                $j('.cart-product-qty-input').prop('readonly', false);
                $j('.cart-checkout-btn').prop('disabled', false);
                $j('.cart-remove-icon').removeClass('hidden');
                if (!response.is_success) {
                    localStorage.setItem('coupon_success', false);

                    $j('.cart-coupon-input').prop('disabled', false);
                    $j('.remove-coupon-btn').removeClass('hidden');
                    $j('.invalid-coupon').empty().html(response.error_message);
                    $j('.cart-discount-block').hide();
                    if (response.is_remove == 1) {
                        $j('.cart-coupon-input').val('');
                    }
                    if ($j('.cart-coupon-input').val() == '') {
                        $j('.remove-coupon-btn').addClass('hidden');
                    }
                }
                else {
                    localStorage.setItem('coupon_success', true);
                    $j('.invalid-coupon').empty();
                    if (response.is_remove == 1) {
                        $j('.cart-coupon-input').prop('disabled', false).val('');
                        $j('.remove-coupon-btn').addClass('hidden');
                        $j('.cart-discount-block').hide();
                    }
                    else {
                        $j('.cart-coupon-input').prop('disabled', true).css('user-select', 'none');
                        $j('.remove-coupon-btn').removeClass('hidden');
                        $j('.cart-discount-block').show();
                        $j('.cart-discount-value').empty().html('- ' + formatCurrency(response.discount_value - total_free_item_price) + " ₫");
                    }
                }
                checkShippingFee(response.grand_total);
                $j('.cart-total-price').empty().html(formatCurrency(response.grand_total) + " ₫");
            }
        });
    }

    function checkShippingFee(price) {
        if (price < 500000) {
            shipping_fee = 11000;
            $j('.cart-grandtotal-price').empty().html(formatCurrency(price + 11000) + " ₫");
            $j('.cart-shipping-price').empty().html(formatCurrency(shipping_fee) + " ₫");
        } else {
            shipping_fee = 0;
            $j('.cart-grandtotal-price').empty().html(formatCurrency(price) + " ₫");
            $j('.cart-shipping-price').empty().html(formatCurrency(shipping_fee) + " ₫");
        }
    }

    function checkCouponCode() {
        var discount_value = $j('#discount-value').val();
        var total_free_item_price = $j('#total-free-item-price').val();

        if (discount_value - total_free_item_price > 0) {
            $j('.remove-coupon-btn').removeClass('hidden');
            if (localStorage.getItem('coupon_success') == 'true') {
                $j('.cart-coupon-input').prop('disabled', true).css('user-select', 'none');
            }
            else if (localStorage.getItem('coupon_success') == 'false') {
                $j('.remove-coupon-btn').addClass('hidden');
                $j('.cart-coupon-input').val('').prop('disabled', false);
            }
        }
        else {
            $j('.cart-discount-block').hide();
        }
    }
    /** End coupon functions **/

    /** Common functions **/
    preventKeyInput();

    function preventKeyInput() {
        $j('input[type="number"]').keypress(function (e) {
            if (e.which === 8) { // to allow BackSpace
                return;
            }
            if (e.which < 48 || e.which > 57 || e.keyCode === 13) {
                e.preventDefault();
            }
        });

        $j('.cart-coupon-input').keypress(function (e) {
            if (e.which === 32 || e.keyCode === 10 || e.keyCode === 13) {
                e.preventDefault();
            }
        });
    }

    function formatCurrency(n) {
        return n.toFixed(0).replace(/./g, function (c, i, a) {
            return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "." + c : c;
        });
    }

    function validateVNPhoneNumber(phone_number) {
        var phoneRe = /^\+?(84|0)([1-9]\d{8,9})$/;
        return phoneRe.test(phone_number);
    }
    /** End common functions **/

    /** Hover Menu **/
    $j('.cat-menu-item').hover(function(){
        $j(this).toggleClass("menu-active");
    });
    /** End Hover Menu **/
</script>

