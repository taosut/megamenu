<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 *
 * @var Mage_Catalog_Block_Product_View $this
 *
 */
?>
<link rel="stylesheet" type="text/css" href="<?php echo $this->getSkinUrl('css/slick-theme-detail.css'); ?>"/>
<link rel="stylesheet" type="text/css" href="<?php echo $this->getSkinUrl('css/magnifier.css'); ?>"/>
<script type="text/javascript" src="<?php echo $this->getSkinUrl('js/Magnifier.js'); ?>" defer></script>

<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<?php $oldPrice = $_product->getPrice();
$newPrice = $_product->getFinalPrice();
?>

<?php
$catArray = ['553', '552', '548', '636', '637', '554', '541', '549', '555', '540', '543', '542', '544'];
?>
<?php
$productCatIds = $_product->getCategoryIds();
$attributeSetId = $_product->getAttributeSetId();
$imgCompare = (string)Mage::helper('catalog/image')->init($_product, 'small_image')->resize(150, 150);
?>
<script>
    dataLayer = [];
</script>

<?php
$products = [];
$productObj = new stdClass();
$productObj->name = (string)$_product->getName();
$productObj->id = (string)$_product->getId();
$productObj->price = (string)$_product->getFinalPrice();
$productObj->brand = (string)$_product->getAttributeText('manufacturer');
$products[] = $productObj;
$session = Mage::getSingleton('customer/session');
$isLogin = $session->isLoggedIn();
?>
<?php $bundleItems = array(); ?>

<?php
$cartItems = [];
?>

<style>
    span.price-notice {
        display: none !important;
    }
</style>

<!--Stack banner-->
<?php echo $_helper->productAttribute($_product, nl2br($_product->getStackBanner()), 'stack_banner') ?>

<div id="messages_product_view">
    <ul class="messages add_to_cart_messages">
    </ul>
    <ul class="messages purchase_request_messages">
    </ul>
</div>

<input type="hidden" class="imgCompare" value="<?php echo $imgCompare ?>"/>
<input type="hidden" class="attributeSetId" value="<?php echo $attributeSetId ?>"/>
<input type="hidden" class="path" value="<?php echo $_product->getProductUrl(); ?>"/>

<div class="product-view">
    <div class="product-essential">
        <div class="row">
            <div id="product-detail-container" class="col-md-9">
                <form action="<?php echo $this->getUrl('checkout/cart/addAjax') ?>" method="post"
                      id="product_addtocart_form"<?php if ($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
                    <?php echo $this->getBlockHtml('formkey') ?>
                    <div class="no-display">
                        <input type="hidden" class="product-id" name="product"
                               value="<?php echo $_product->getId() ?>"/>
                        <input type="hidden" name="related_product" id="related-products-field" value=""/>
                    </div>
                    <div class="col-md-12 pl-0 pr-0 mobile-view">
                        <div class="col-md-6 col-xs-12 product-img-box" style="position: relative">
                            <?php echo $this->getChildHtml('media') ?>
                        </div>

                        <div class="col-md-6 col-xs-12 product-shop">
                            <div class="col-md-12 product-name">
                                <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                            </div>
                            <div class="col-md-12 col-xs-4 old-price-block">
                                <?php if ($oldPrice != $newPrice) : ?>
                                    <div class="product-att">
                                        <span class="old-price">
                                            <span class="cart-price">
                                                <?php echo number_format($oldPrice, 0, ",", ".") . ' <sup>đ</sup>'; ?>
                                            </span>
                                        </span>
                                    </div>
                                <?php endif ?>
                            </div>
                            <div class="col-md-6 col-xs-6 price-block">
                                <span class="regular-price regular-price-view">
                                    <span class="price dt-regular-price">
					                     <?php echo number_format($newPrice, 0, ",", ".") . ' <sup>đ</sup>'; ?>
				                    </span>
			                    </span>
                            </div>
                            <div class="col-md-12 col-sm-12">
                                <div class="col-md-4 col-xs-12" style="position: relative">
                                    <button type="button" class="btn btn-primary btn-share mobile-fb-share"
                                            style="float:none!important;"
                                            onclick="shareFB()">Chia sẻ&nbsp;
                                        <i class="fa fa-facebook"></i>
                                    </button>
                                    <button type="button"
                                            class="btn btn-primary btn-comment mobile-fb-share mobile-fb-comment"
                                            style="float:none!important;"
                                            onclick="goToCommentBlock()">Bình luận&nbsp;
                                        <i class="fa fa-keyboard-o"></i>
                                    </button>
                                    <div class="mobile-favourite" style="display: none">
                                        <button type="button" title="Thêm vào danh sách yêu thích"
                                                class="btn btn-mobile-favourite mobile-switch"
                                                product-id="<?php echo $_product->getId(); ?>">
                                            <span><span><i class="fa fa-heart" aria-hidden="true"></i></span></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 col-xs-12 col-sm-12">
                                <?php if ($oldPrice != $newPrice) : ?>
                                    <div class="product-att old-price-text">
                                        <?php
                                        $product_discount_value = $oldPrice - $newPrice;
                                        $product_discount = ($product_discount_value / $oldPrice) * 100;
                                        ?>
                                        Tiết kiệm:
                                        <span class="old-price">
                                            <span class="product-discount-value">
                                                <?php echo number_format($product_discount_value, 0, ",", ".") . " <sup>đ</sup>"; ?>
                                            </span>
                                            <span class="product-discount">(<?php echo round($product_discount); ?>
                                                %)</span>
                                        </span>
                                    </div>
                                <?php endif ?>
                                <?php if ($_product->getAttributeText('manufacturer')): ?>
                                <?php endif; ?>
                                <?php echo $this->getChildHtml('other'); ?>
                                <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                                    <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                                <?php endif; ?>
                                <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
                                    <div class="product-included">
                                        <?php if ($_product->getTypeId() == 'bundle') : ?>
                                            <h3>Sản phẩm bao gồm:</h3>
                                            <?php
                                            $catBuildPC = Mage::getModel('catalog/category')
                                                ->getCollection()
                                                ->addAttributeToFilter('url_key', 'build-pc')
                                                ->getFirstItem();
                                            $childrenIds = $catBuildPC->getResource()->getChildren($catBuildPC);
                                            array_push($childrenIds, $catBuildPC->getId());
                                            ?>
                                            <?php if (count($childrenIds) > 0 && count($productCatIds) > 0): ?>
                                                <?php if (in_array($catBuildPC->getId(), $productCatIds)): ?>
                                                    <?php
                                                    $bundleCollection = $_product->getTypeInstance(true)
                                                        ->getSelectionsCollection($_product->getTypeInstance(true)->getOptionsIds($_product), $_product);
                                                    foreach ($bundleCollection as $item) {
                                                        $shareArray = array_intersect($item->getCategoryIds(), $catArray);
                                                        if (count($shareArray) > 0) {
                                                            $itemCatId = array_shift($shareArray);
                                                            $productTemp = Mage::getModel('catalog/product')->load($item->getId());
                                                            $itemImageUrl = Mage::helper('catalog/image')->init($productTemp, 'small_image')->resize(150, 150);
                                                            if (isset($itemCatId)) {
                                                                $bundleItems[] = (object)array(
                                                                    'catId' => $itemCatId,
                                                                    'catUrl' => Mage::getModel('catalog/category')->load($itemCatId)->getUrl(),
                                                                    'productId' => $item->getId(),
                                                                    'productName' => $item->getName(),
                                                                    'productPrice' => intval($item->getFinalPrice()),
                                                                    'productUrl' => $item->getProductUrl(),
                                                                    'productImageUrl' => "$itemImageUrl",
                                                                    'productQty' => intval($item->getSelectionQty())
                                                                );
                                                            }
                                                        }
                                                    }
                                                    ?>
                                                    <div class="build-pc-block a-right">
                                                        <button type="button"
                                                                class="btn btn-info bp-table-btn bp-customize-btn"
                                                                onclick="customizeBuildPC()">
                                                            <img class="bp-ajax-loader-view" title="Đang tải"
                                                                 src="<?php echo $this->getSkinUrl('images/ajax-loader.gif') ?>"
                                                                 width="14" height="14"/>
                                                            <span class="hidden-mobile">Tùy chỉnh cấu hình</span>
                                                            <span class="display-mobile">Tùy chỉnh</span>
                                                        </button>
                                                    </div>
                                                <?php endif; ?>
                                            <?php endif; ?>
                                        <?php endif; ?>
                                        <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                                    </div>
                                <?php endif; ?>
                                <?php if (!$this->hasOptions()): ?>
                                    <div class="add-to-box">
                                        <?php if ($_product->isSaleable()): ?>
                                            <?php echo $this->getChildHtml('addtocart') ?>
                                            <?php if ($this->helper('wishlist')->isAllow() || $_compareUrl = $this->helper('catalog/product_compare')->getAddUrl($_product)): ?>
                                                <span class="or"><?php echo $this->__('OR') ?></span>
                                            <?php endif; ?>
                                        <?php endif; ?>
                                        <?php echo $this->getChildHtml('addto') ?>
                                    </div>
                                    <?php echo $this->getChildHtml('extra_buttons') ?>
                                <?php elseif (!$_product->isSaleable()): ?>
                                    <div class="add-to-box">
                                        <?php echo $this->getChildHtml('addto') ?>
                                    </div>
                                <?php endif; ?>
                            </div>
                            <?php if ($this->canEmailToFriend()): ?>
                                <p class="email-friend"><a
                                            href="<?php echo $this->helper('catalog/product')->getEmailToFriendUrl($_product) ?>"><?php echo $this->__('Email to a Friend') ?></a>
                                </p>
                            <?php endif; ?>
                            <?php echo $this->getReviewsSummaryHtml($_product, false, true) ?>
                            <?php echo $this->getChildHtml('alert_urls') ?>
                            <div class="clearfix"></div>
                            <?php if ($_product->getShortDescription()): ?>
                                <div class="short-description col-md-12 col-sm-12">
                                    <h2>Mô tả</h2>
                                    <div class="short_description">
                                        <?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                            <div class="clearfix"></div>
                        </div>
                        <div class="clearfix"></div>
                        <br>
                        <!-- Product detail web -->
                        <div class="col-md-12 pl-0 pr-0 product-detail-tabs hidden-mobile">
                            <ul class="tabs">
                                <li><a href="#tab-1" class="active">THÔNG TIN SẢN PHẨM</a></li>
                                <li><a href="#tab-2">THÔNG SỐ KỸ THUẬT</a></li>
                                <?php if ($_product->getData('review')): ?>
                                    <li><a href="#tab-3">ĐÁNH GIÁ</a></li>
                                <?php endif; ?> <?php if ($_product->getData('warranty_return')): ?>
                                    <li><a href="#tab-4">BẢO HÀNH</a></li>
                                <?php endif; ?>
                            </ul>
                            <div class="tab-content" id="tab-1">
                                <div class="description-block changed description-init-height">
                                    <?php echo $this->getChildHtml('description') ?>
                                </div>
                                <div class="mt-10 a-center">
                                    <a class="description-toggle-btn"
                                       href="javascript:readMoreDescription()">
                                        <span id="readmore-description"
                                              class="click-readmore-description">Xem thêm</span>
                                        <i id="readmore-description-icon"
                                           class="fa fa-angle-double-down click-readmore-description"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="tab-content" id="tab-2" style="display: none;">
                                <?php echo $this->getChildHtml('additional') ?>
                            </div>
                            <?php if ($_product->getData('review')): ?>
                                <div class="tab-content" id="tab-3" style="display: none;">
                                    <?php echo $_product->getData('review'); ?>
                                </div>
                            <?php endif; ?>
                            <?php if ($_product->getData('warranty_return')): ?>
                                <div class="tab-content" id="tab-4" style="display: none;">
                                    <div class="warranty-block changed warranty-init-height">
                                        <?php echo $_product->getData('warranty_return'); ?>
                                    </div>
                                    <div class="mt-10 a-center">
                                        <a class="warranty-toggle-btn"
                                           href="javascript:readMoreWarranty()">
                                            <span id="readmore-warranty">Xem thêm</span>
                                            <i id="readmore-warranty-icon" class="fa fa-angle-double-down"></i>
                                        </a>
                                    </div>
                                </div>
                            <?php endif; ?>
                        </div>

                        <!-- Product detail info mobile-->
                        <div class="display-mobile">
                            <div class="col-md-12 additional-mobile">
                                <div class="product-detail-title-mobile additional-mobile-title"
                                     onclick="toggleItem('additional-mobile-title')">
                                    <span>Thông tin kỹ thuật</span>
                                    <i class="fa fa-icon fa-angle-down"></i>
                                </div>
                                <div id="additional-mobile-content">
                                    <?php echo $this->getChildHtml('additional') ?>
                                </div>
                            </div>
                            <div class="col-md-12 description-mobile">
                                <div class="product-detail-title-mobile description-mobile-title pl-0 pr-0"
                                     onclick="toggleItem('description-mobile-title')">
                                    <span>Thông tin sản phẩm</span>
                                    <i class="fa fa-icon fa-angle-up"></i>
                                </div>
                                <div id="description-mobile-content" style="display: none;">
                                    <?php echo $this->getChildHtml('description') ?>
                                </div>
                            </div>
                            <?php if ($_product->getData('review')): ?>
                                <div class="col-md-12">
                                    <div id="review-mobile-content" style="display: none;">
                                        <?php echo $_product->getData('review'); ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                            <?php if ($_product->getData('warranty_return')): ?>
                                <div class="col-md-12 warranty-mobile">
                                    <div class="product-detail-title-mobile warranty-mobile-title pl-0 pr-0"
                                         onclick="toggleItem('warranty-mobile-title')">
                                        <span>Thông tin bảo hành</span>
                                        <i class="fa fa-icon fa-angle-up"></i>
                                    </div>
                                    <div id="warranty-mobile-content" style="display: none;">
                                        <?php echo $_product->getData('warranty_return'); ?>
                                    </div>
                                </div>
                            <?php endif; ?>
                        </div>
                        <!-- End product detail info-->
                    </div>
                </form>

                <!-- Facebook comments-->
                <div class="fb-comments fb-comments-mobile" data-order-by="reverse_time"
                     data-href="<?php echo explode('?', $_product->getProductUrl())[0]; ?>"
                     data-numposts="5" data-width="100%"></div>
                <div class="clearfix"></div>
                <div class="related-products">
                    <?php echo $this->getChildHtml('related_products'); ?>
                </div>
            </div>

            <div class="col-md-3 hidden-mobile cart-sticky-container">
                <div class="cart-sticky">
                    <div class="cart">
                        <?php echo $this->getChildHtml('cartSticky'); ?>
                    </div>
                    <div class="sale-policy hidden-mobile">
                        <?php
                        echo $this->getLayout()->createBlock('cms/block')->setBlockId('detail_tek')->toHtml();
                        ?>
                    </div>
                </div>
            </div>

        </div>
        <div class="clearer"></div>
        <div>
            <?php echo $this->getChildHtml('product_review') ?>
        </div>
        <script type="text/javascript">
            //<![CDATA[
            var productAddToCartForm = new VarienForm('product_addtocart_form');
            productAddToCartForm.submit = function (button, url) {
                if (this.validator.validate()) {
                    var form = this.form;
                    var oldUrl = form.action;

                    if (url) {
                        form.action = url;
                    }
                    var e = null;
                    try {
                        this.form.submit();
                    } catch (e) {
                    }
                    this.form.action = oldUrl;
                    if (e) {
                        throw e;
                    }

                    if (button && button != 'undefined') {
                        button.disabled = true;
                    }
                }
            }.bind(productAddToCartForm);

            productAddToCartForm.submitLight = function (button, url) {
                if (this.validator) {
                    var nv = Validation.methods;
                    delete Validation.methods['required-entry'];
                    delete Validation.methods['validate-one-required'];
                    delete Validation.methods['validate-one-required-by-name'];
                    // Remove custom datetime validators
                    for (var methodName in Validation.methods) {
                        if (methodName.match(/^validate-datetime-.*/i)) {
                            delete Validation.methods[methodName];
                        }
                    }

                    if (this.validator.validate()) {
                        if (url) {
                            this.form.action = url;
                        }
                        this.form.submit();
                    }
                    Object.extend(Validation.methods, nv);
                }
            }.bind(productAddToCartForm);
            //]]>
        </script>
    </div>

    <!-- Modal -->
    <div id="purchaseRequestModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <input type="hidden" id="require-product-id" value="<?php echo $_product->getId(); ?>"/>
                <input type="hidden" id="require-product-name" value="<?php echo $_product->getName(); ?>"/>
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title a-center">Gửi yêu cầu đặt hàng</h4>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label for="name">Họ tên <span class="red">*</span></label>
                        <input type="text" class="form-control" id="require-name">
                    </div>
                    <div class="form-group">
                        <label for="phone">Số điện thoại <span class="red">*</span></label>
                        <input type="number" class="form-control" id="require-phone">
                    </div>
                    <div class="form-group">
                        <label for="phone">Nội dung yêu cầu (tối đa 500 ký tự) <span class="red">*</span></label>
                        <textarea class="form-control" rows="4" id="require-content" maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn-send-request" onclick="sendPurchaseRequest()">
                        <img class="ajax-loader-pr" title="Đang tải"
                             src="<?php echo $this->getSkinUrl('images/ajax-loader.gif') ?>"
                             width="18" height="18"/>
                        &nbsp;Xác nhận
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--<script type="text/javascript" src='--><?php //echo $this->getSkinUrl("js/shorten.js"); ?><!--'></script>-->
<script type="text/javascript">
    var $j = jQuery.noConflict();
</script>
<script type="text/javascript">

    $j('.cp-panel-content').on('click', '.featureX', function (e) {
        var productId = $j(this).attr('product-id');
        var currentId = $j('.product-id').val();
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        var listItem = compareList.listItem;
        var newList = [];
        listItem.forEach(function (item) {
            if (item.product_id != productId) {
                newList.push(item);
            }
        });
        if (productId == currentId) {
            $j('.cp-check').attr('checked', false);
            $j('.fa-unpick').show();
            $j('.fa-cp').hide();
        }
        compareList.listItem = newList;
        localStorage.setItem('compareList', JSON.stringify(compareList));
        $j('#item' + productId).hide();
        if (newList.length == 0) {
            $j('.cp-panel').hide();
        }
        e.stopPropagation();
        e.preventDefault();

        checkCompareListCount();
    });

    function renderCompareList() {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        if (compareList && compareList.listItem) {
            var listItem = compareList.listItem;
            if (listItem.length > 0) {
                var content = "";
                listItem.forEach(function (item) {
                    content = content +
                        '<div class="col-md-12 col-xs-12 no-left mb-10" id="item' + item.product_id + '">' +
                        '<div class="featureX" product-id="' + item.product_id + '">' +
                        '<i class="fa fa-trash-o"></i>' +
                        '</div>' +
                        '<div class="col-md-2 col-xs-2 no-left">' +
                        '<img src="' + item.image_url + '" width="50" height="50">' +
                        '</div>' +
                        '<div class="col-md-10 col-xs-10 cp-panel-product-name">' +
                        '<a href="' + item.url + '" target="_blank">' + item.name + '</a>' +
                        '</div>' +
                        '</div>'
                });
                $j('.cp-panel-content').html(content);
                $j('.cp-panel').show();
                $j(".cp-panel-button-group").show();
            } else {
                $j('.cp-panel').hide();
            }
        } else {

            $j('.cp-panel').hide();
        }
    }


</script>
<script type="text/javascript">
    renderCompareList();
    var productId = $j('.product-id').val();
    $j(document).ready(function () {
        if ($j(window).width() < 500) {
            $j('.add-to-compare').hide();
            $j('.mobile-favourite').show();
            $j('.switch-out').hide();
            if ($j('.outstock-hide').is(":visible")) {
                $j('.outstock-hide').hide();
            }
        } else {
            if (!$j('.outstock-hide').is(":visible")) {
                $j('.outstock-hide').show();
            }
            $j('.add-to-compare').show();
        }
        if ($j('.switch').hasClass('btn-add-to-wishlist')) {
            $j('.mobile-switch').addClass('mobile-add');
        }
        if ($j('.switch').hasClass('remove-wish-list')) {
            $j('.mobile-switch').addClass('mobile-remove');
        }
    });
    $j('.product-custom-option').change(function () {
        var option_value = $j('.product-custom-option').val();
        if (option_value != '') {
            $j('.attribute-error-message').hide();
        }
    });

    $j(window).on('resize', function () {
        if ($j(window).width() < 500) {
            $j('.add-to-compare').hide();
            if ($j('#instock-status').val() === 'Có') {
                $j('.page').css('padding-bottom', '40px');
            }
        } else {
            $j('.page').css('padding-bottom', '0');
            $j('.add-to-compare').show();
        }
    }).trigger('resize');

    $j(window).on('resize', function () {
        if ($j(window).width() < 500) {
            $j('.mobile-favourite').show();
        } else {
            $j('.mobile-favourite').hide();
        }
    });

    // Check display stackbanner
    var timeNow = new Date().getTime();
    var motogClosed = localStorage.getItem("motog_closed_product_" + productId);
    if (!motogClosed) {
        $j('.stackbanner').show();
    }
    else {
        if (timeNow - parseInt(motogClosed) >= 600000) {
            $j('.stackbanner').show();
        }
        else {
            $j('.stackbanner').hide();
        }
    }

    function toggleItem(className) {
        if (className == 'additional-mobile-title') { //toggle thong so ky thuat
            $j("#additional-mobile-content").toggle(0, function () {
                if ($j("#additional-mobile-content").is(':hidden')) {
                    $j('.additional-mobile-title').find("i").toggleClass('fa-angle-up fa-angle-down');
                } else {
                    $j('.additional-mobile-title').find("i").toggleClass('fa-angle-down fa-angle-up');
                }
            });
        } else if (className == 'description-mobile-title') { //toggle thong tin san pham
            $j("#description-mobile-content").toggle(0, function () {
                if ($j("#description-mobile-content").is(':hidden')) {
                    $j('.description-mobile-title').find("i").toggleClass('fa-angle-up fa-angle-down');
                } else {
                    $j('.description-mobile-title').find("i").toggleClass('fa-angle-down fa-angle-up');
                }
            });
        }
        else if (className == 'warranty-mobile-title') { //toggle thong tin bao hanh
            $j("#warranty-mobile-content").toggle(0, function () {
                if ($j("#warranty-mobile-content").is(':hidden')) {
                    $j('.warranty-mobile-title').find("i").toggleClass('fa-angle-up fa-angle-down');
                } else {
                    $j('.warranty-mobile-title').find("i").toggleClass('fa-angle-down fa-angle-up');
                }
            });
        }
    }

    $j('.ajax-loader-pr').hide();
    $j('.bp-ajax-loader-view').hide();

    // Check if remove coupon or not
    var discountForm = new VarienForm('discount-coupon-form');
    discountForm.submit = function (isRemove) {
        if (isRemove) {
            $j('coupon_code').removeClassName('required-entry');
            $j('remove-coupone').value = "1";
        } else {
            $j('coupon_code').addClassName('required-entry');
            $j('remove-coupone').value = "0";
        }
        return VarienForm.prototype.submit.bind(discountForm)();
    };

    preventKeyInput();
    checkCouponCode();

    function sendPurchaseRequest() {
        var require_name = $j("#require-name").val().trim();
        var require_phone = $j("#require-phone").val().trim();
        var require_content = $j("#require-content").val().trim();
        var require_product_id = $j("#require-product-id").val().trim();
        var require_product_name = $j("#require-product-name").val().trim();

        var url = "<?php echo $this->getUrl('stockrequest/stockrequest/saveRequest');  ?>";
        var data = {
            user_name: require_name,
            phone_number: require_phone,
            request_content: require_content,
            product_id: require_product_id,
            product_name: require_product_name
        };

        if (require_name === '') {
            alert('Vui lòng nhập họ tên');
        } else if (require_phone === '') {
            alert('Vui lòng nhập số điện thoại');
        } else if (require_phone !== '' && !validateVNPhoneNumber(require_phone)) {
            alert('Số điện thoại không đúng định dạng (phải có dạng 84xxx hoặc 0xxx, chứa 10 hoặc 11 ký tự)');
        } else if (require_content === '') {
            alert('Vui lòng nhập nội dung cần yêu cầu');
        } else {
            $j('.ajax-loader-pr').show();
            $j('.btn-send-request').prop('disabled', true);
            $j.ajax({
                url: url,
                type: "POST",
                data: data,
                dataType: "json"
            }).done(function (data) {
                $j('.ajax-loader-pr').hide();
                $j('#purchaseRequestModal').modal('hide');
                $j('.btn-send-request').prop('disabled', false);
                $j('.purchase_request_messages').empty();
                if (data.success_message) {
                    $j('.purchase_request_messages').append("<li class='success-msg'><ul><li><span>" + data.success_message + "</span></li></ul></li>");
                } else if (data.error_message) {
                    $j('.purchase_request_messages').append("<li class='error-msg'><ul><li><span>" + data.error_message + "</span></li></ul></li>");

                }
            });
        }
    }

    // Prevent non-numeric character
    function preventKeyInput() {
        $j('input[type="number"]').keypress(function (e) {
            if (e.which == 8) { // to allow BackSpace
                return
            }
            if (e.which < 48 || e.which > 57 || e.keyCode == 13) {
                e.preventDefault();
            }
        });

        $j('.discount-input').keypress(function (e) {
            if (e.keyCode === 10 || e.keyCode === 13)
                e.preventDefault();
        });
    }

    // Check if coupon code length >0
    function checkCouponCode() {

        var discount_value = $j('#discount-value').val();
        var total_free_item_price = $j('#total-free-item-price').val();

        if (discount_value - total_free_item_price > 0) {
            $j('.remove-coupon-btn').show();
            if (localStorage.getItem('coupon_success') == 'true') {
                $j('.success-coupon-btn').show();
                $j('#coupon_code').prop('disabled', true);
                $j('#coupon_code').css('user-select', 'none');
            }
            else if (localStorage.getItem('coupon_success') == 'false') {
                $j('.success-coupon-btn').hide();
                $j('.remove-coupon-btn').hide();
                $j('#coupon_code').val('');
                $j('#coupon_code').prop('disabled', false);
            }
        }
        else {
            $j('.cart-discount-block').hide();
        }
    }

    // Xu ly ajax them san pham vao gio hang
    function addToCart() {
        $j('.btn-tekshop').removeClass('opa-1');
        $j('.btn-proceed-checkout').prop('disabled', true);
        var input_qty = $j('.qty-selector-input').val();
        if (input_qty == 0) {
            $j('.qty-selector-input').val(1);
        }
        if (input_qty > 500) {
            $j('.qty-selector-input').val(500);
        }
        var form = $j('#product_addtocart_form');
        var data = form.serializeArray();
        $j('.btn-add-to-cart').prop('disabled', true);
        $j('.cart-loader').show();
        var purchaseQty = parseInt($j('.qty-selector-input').val());
        /* Enhanced ecommerce add to cart*/
        /**
         * Measure adding a product to a shopping cart by using an 'add' actionFieldObject
         * and a list of productFieldObjects.
         */
        dataLayer.push({
            'event': 'addToCart',
            'ecommerce': {
                'currencyCode': 'VND',
                'add': {                                // 'add' actionFieldObject measures.
                    'products': [{                        //  adding a product to a shopping cart.
                        'name': <?php echo json_encode($_product->getName()); ?>,
                        'id': "<?php echo $_product->getId()?>",
                        'price': "<?php echo $_product->getFinalPrice()?>",
                        'quantity': purchaseQty
                    }]
                }
            }
        });
        /* End Enhanced ecommerce add to cart*/

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {

                $j('.cart-loader').hide();
                $j('.btn-add-to-cart').prop('disabled', false);
                if (response.message !== '') {
                    $j('.add_to_cart_messages').empty();
                    if (response.error_flg == 0) {
                        if (win.width() < 500) {
                            window.location = '<?php echo $this->getUrl('checkout/cart') ?>';
                        } else {
                            $j('.add_to_cart_messages').append("<li class='success-msg'><ul><li><span>" + response.message + "</span></li></ul></li>");
                        }
                    }
                    else {
                        if (response.message == 'Vui lòng lựa chọn thuộc tính sản phẩm!') {
                            $j('.attribute-error-message').html(response.message);
                            $j('.attribute-error-message').show();
                        }
                        else {
                            if (response.message == 'Please specify the product\'s option(s).') {
                                response.message = 'Vui lòng lựa chọn thuộc tính sản phẩm!';
                            }
                            $j('.add_to_cart_messages').append("<li class='error-msg'><ul><li><span>" + response.message + "</span></li></ul></li>");
                            if (win.width() < 500) {
                                $j('#messages_product_view').insertAfter('.share-block');
                                $j("html, body").animate({scrollTop: $j('#messages_product_view').offset().top + 15}, 500);
                            }
                            $j('.btn-tekshop').addClass('opa-1');
                        }
                    }
                }

                // Update Subtotal
                $j('.cart-pr-subtotal').empty();
                $j('.cart-pr-subtotal').html(addCommas(response.sub_total) + ' ₫');

                // Update Grandtotal
                $j('.cart-pr-grandtotal').empty();
                $j('.cart-pr-grandtotal').html(addCommas(response.grand_total) + ' ₫');

                // Update shopping cart body
                $j('#shopping-cart-body').empty();
                $j('#shopping-cart-body').append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty();
                $j('#shopping-cart-header').append(response.ex_header_html);

                preventKeyInput();
                checkCouponCode();

                $j('.btn-proceed-checkout').prop('disabled', false);
            }
        });
    }

    // Xu ly ajax delete san pham khoi gio hang
    function deleteItem(value) {
        var url = $j(value).data("url");
        var id = $j(value).data("id");
        var product_id = $j(value).data("product-id");
        var name = $j(value).data("name");
        var price = $j(value).data("price");
        var qty = $j(value).data("qty");

        /* Enhanced Ecommerce remove from cart */
        /**
         * Measure the removal of a product from a shopping cart.
         */
        dataLayer.push({
            'event': 'removeFromCart',
            'ecommerce': {
                'remove': {                               // 'remove' actionFieldObject measures.
                    'products': [{                          //  removing a product to a shopping cart.
                        'name': name.toString(),
                        'id': product_id.toString(),
                        'price': price.toString(),
                        'quantity': qty
                    }]
                }
            }
        });
        /* End enhanced ecommerce remove from cart */

        $j('.btn-proceed-checkout').prop('disabled', true);

        var ald_btn_id = "ald-btn-" + id;
        var ald_id = "ald-" + id;
        $j('#' + ald_btn_id).hide();
        $j('#' + ald_id).show();

        $j.ajax({
            url: url,
            type: "POST",
            dataType: 'json',
            success: function (response) {
                $j('#' + ald_id).show();

                if (response.message !== '') {
                    $j('.add_to_cart_messages').empty();
                    if (response.error_flg == 1) {
                        $j('.add_to_cart_messages').append("<li class='error-msg'><ul><li><span>" + response.message + "</span></li></ul></li>");
                    }
                    else {
                        $j('.add_to_cart_messages').append("<li class='success-msg'><ul><li><span>" + response.message + "</span></li></ul></li>");
                    }
                }

                // Update Subtotal
                $j('.cart-pr-subtotal').empty();
                $j('.cart-pr-subtotal').html(addCommas(response.sub_total) + ' ₫');

                // Update Grandtotal
                $j('.cart-pr-grandtotal').empty();
                $j('.cart-pr-grandtotal').html(addCommas(response.grand_total) + ' ₫');

                // Update shopping cart body
                $j('#shopping-cart-body').empty();
                $j('#shopping-cart-body').append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty();
                $j('#shopping-cart-header').append(response.ex_header_html);

                preventKeyInput();
                checkCouponCode();
                $j('.btn-proceed-checkout').prop('disabled', false);
            }
        });
    }

    /* Start apply coupon */
    var timeout = null;

    function doCouponPost() {
        // check ios private mode browser
        try {
            if ($j('#coupon_code').val() !== '') {
                $j('.ajax-loader').show();
                $j('.btn-proceed-checkout').prop('disabled', true);
                $j('.fast-pay').addClass('btn-deactive');
                $j('.remove-coupon-btn').show();
                if (timeout) {
                    clearTimeout(timeout);
                }
                timeout = setTimeout(function () {
                    applyCouponCode(false); // false: not remove coupon code
                }, 1000);
            }
            else {
                $j('.btn-proceed-checkout').prop('disabled', false);
                $j('.fast-pay').removeClass('btn-deactive');
                $j('.ajax-loader').hide();
                $j('.success-coupon-btn').hide();
                $j('.invalid_coupon').empty();
                $j('.remove-coupon-btn').hide();
            }
            localStorage.test = 2;

        } catch (e) {
            alert('Trình duyệt của bạn đang ở chế độ Private, vui lòng tắt chế độ Private để tiếp tục!');
        }
    }

    // Xu ly ajax nhap ma code
    function applyCouponCode(isRemove) {

        if (isRemove) {
            $j('.success-coupon-btn').hide();
            $j('.ajax-loader').show();
            $j('#remove-coupon').val(1);
        } else {
            $j('#remove-coupon').val(0);
        }

        var form = $j('#discount-coupon-form');
        var data = form.serializeArray();
        var total_free_item_price = $j('#total-free-item-price').val();

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {
                $j('.ajax-loader').hide();
                $j('.btn-proceed-checkout').prop('disabled', false);
                $j('.fast-pay').removeClass('btn-deactive');

                if (!response.is_success) {
                    localStorage.setItem('coupon_success', false);

                    $j('#coupon_code').prop('disabled', false);
                    $j('.remove-coupon-btn').show();
                    $j('.invalid_coupon').empty();
                    $j('.invalid_coupon').html(response.error_message);
                    $j('.cart-discount-block').hide();
                    if (response.is_remove == 1) {
                        $j('#coupon_code').val('');
                    }
                    if ($j('#coupon_code').val() == '') {
                        $j('.remove-coupon-btn').hide();
                    }
                }
                else {
                    localStorage.setItem('coupon_success', true);
                    if (response.is_remove == 1) {
                        $j('#coupon_code').prop('disabled', false);
                        $j('#coupon_code').val('');
                        $j('.invalid_coupon').empty();
                        $j('.success-coupon-btn').hide();
                        $j('.remove-coupon-btn').hide();
                        $j('.cart-discount-block').hide();
                    }
                    else {
                        $j('#coupon_code').prop('disabled', true);
                        $j('#coupon_code').css('user-select', 'none');
                        $j('.invalid_coupon').empty();
                        $j('.remove-coupon-btn').show();
                        $j('.success-coupon-btn').show();
                        $j('.cart-discount-block').show();
                        $j('.cart-discount-value').empty();
                        $j('.cart-discount-value').html("- " + addCommas(response.discount_value - total_free_item_price) + " ₫");
                    }
                }
                $j('.cart-pr-grandtotal').empty();
                $j('.cart-pr-grandtotal').html(addCommas(response.grand_total) + " ₫");
            }
        });
    }

    /* End appply coupon*/

    /* Start update cart */
    var timeout_update = null;

    function doUpdateCart(value) {

        preventKeyInput();

        var id = $j(value).data("id");
        var product_id = $j(value).data("product-id");
        var name = $j(value).data("name");
        var price = $j(value).data("price");
        var qty = $j(value).data("qty");

        $j('.input-qty').prop('readonly', true);

        var input_qty = "input-qty-" + id;
        $j('#' + input_qty).prop('readonly', false);

        var qty_val = $j('#' + input_qty).val();

        $j('.btn-proceed-checkout').prop('disabled', true);
        $j('.update-cart-loading').addClass('is-display');
        if (timeout_update) {
            clearTimeout(timeout_update);
        }
        timeout_update = setTimeout(function () {
            updateCart(product_id, name, price, qty, qty_val);
        }, 1000);
    }

    function updateCart(product_id, name, price, qty, qty_val) {

        var input_qty_val = parseInt(qty_val);

        /* Xu ly enhanced ecommerce add/remove cart */
        if (input_qty_val > 500) {
            input_qty_val = 500;
        }

        if (qty !== input_qty_val) {
            if (qty < input_qty_val) {
                /* Enhanced ecommerce add to cart*/
                /**
                 * Measure adding a product to a shopping cart by using an 'add' actionFieldObject
                 * and a list of productFieldObjects.
                 */
                dataLayer.push({
                    'event': 'addToCart',
                    'ecommerce': {
                        'currencyCode': 'VND',
                        'add': {                                // 'add' actionFieldObject measures.
                            'products': [{                        //  adding a product to a shopping cart.
                                'name': name.toString(),
                                'id': product_id.toString(),
                                'price': price.toString(),
                                'quantity': input_qty_val - qty
                            }]
                        }
                    }
                });
                /* End Enhanced ecommerce add to cart*/
            }
            else {
                /* Enhanced Ecommerce remove from cart */
                /**
                 * Measure the removal of a product from a shopping cart.
                 */
                dataLayer.push({
                    'event': 'removeFromCart',
                    'ecommerce': {
                        'remove': {                               // 'remove' actionFieldObject measures.
                            'products': [{                          //  removing a product to a shopping cart.
                                'name': name.toString(),
                                'id': product_id.toString(),
                                'price': price.toString(),
                                'quantity': qty - input_qty_val
                            }]
                        }
                    }
                });
                /* End enhanced ecommerce remove from cart */
            }
        }
        /* End xu ly enhanced ecommerce add/remove cart */

        var form = $j('#cart-qty-form');
        var data = form.serializeArray();

        $j.ajax({
            url: form.attr('action'),
            type: form.attr('method'),
            dataType: 'json',
            data: data,
            success: function (response) {

                // Update Subtotal
                $j('.cart-pr-subtotal').empty();
                $j('.cart-pr-subtotal').html(addCommas(response.sub_total) + ' ₫');

                // Update Grandtotal
                $j('.cart-pr-grandtotal').empty();
                $j('.cart-pr-grandtotal').html(addCommas(response.grand_total) + ' ₫');

                // Update shopping cart body
                $j('#shopping-cart-body').empty();
                $j('#shopping-cart-body').append(response.ex_html);

                // Update shopping cart header
                $j('#shopping-cart-header').empty();
                $j('#shopping-cart-header').append(response.ex_header_html);

                preventKeyInput();
                checkCouponCode();

                $j('.update-cart-loading').removeClass('is-display');
                $j('.btn-proceed-checkout').prop('disabled', false);
                $j('.input-qty').prop('readonly', false);
            }
        });
    }

    /* End update cart */

    function addCommas(str) {
        var parts = (str + "").split("."),
            main = parts[0],
            len = main.length,
            output = "",
            first = main.charAt(0),
            i;

        if (first === '-') {
            main = main.slice(1);
            len = main.length;
        } else {
            first = "";
        }
        i = len - 1;
        while (i >= 0) {
            output = main.charAt(i) + output;
            if ((len - i) % 3 === 0 && i > 0) {
                output = "." + output;
            }
            --i;
        }
        // put sign back
        output = first + output;
        // put decimal part back
        if (parts.length > 1) {
            output += "." + parts[1];
        }
        return output;
    }

    function formatCurrency(n) {
        return n.toFixed(0).replace(/./g, function (c, i, a) {
            return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "." + c : c;
        });
    }

    function validateVNPhoneNumber(phone_number) {
        var phoneRe = /^\+?(84|0)([1-9]\d{8,9})$/;
        return phoneRe.test(phone_number);
    }

    function checkQtySelector() {
        var inputQty = $j(".qty-selector-input");
        var oldValue = inputQty.val();

        if (oldValue <= 1) {
            $j(".dec").css('background', '#d3d3d3');
        }
        else {
            $j(".dec").css('background', '#51b352');
        }
    }

    // Check qty selector
    var oldValue = $j(".button").parent().find("input").val();
    if (oldValue <= 1) {
        $j(".dec").css('background', '#d3d3d3');
    }
    else {
        $j(".dec").css('background', '#51b352');
    }

    $j('.cart-btn-apply').css('opacity', '0.4');

    // we can now rely on $j within the safety of our "bodyguard" function
    $j(document).ready(function () {

        var product_is_recurring = $j('#product-is-recurring').val();
        if (typeof product_is_recurring !== 'undefined' && product_is_recurring == 1) {
            $j('.input-coupon-block').hide();
        }

        var qty_val = $j('.qty-selector-input').val();
        if (qty_val == 0) {
            $j('.qty-selector-input').val(1);
        }

        $j('.product-options').find("select").each(function (index) {
            $j(this).change(function () {
                var price = <?php echo $newPrice?>;
                $j('.product-options').find("select").each(function (index, item) {
                    var priceChange = parseInt($j(item).find(":selected").attr("price"));
                    if (isNaN(priceChange)) {
                        priceChange = 0;
                    }
                    price += priceChange;
                });
                if (isNaN(price)) {
                    price = <?php echo $newPrice?>;
                }
                $j(".regular-price .price").html(formatCurrency(price) + ' <sup>đ</sup>').text();
            });
        });

        $j('.tabs li a').click(function (event) {
            event.preventDefault();
            $j('.tabs li a').removeClass('active');
            $j(this).addClass('active');
            $j('.tab-content').hide();
            $j($j(this).attr('href')).show();
        });

//        $j(document).ready(function () {
//            $j(".short_description p").shorten();
//        });

        $j(".button").on("click", function () {

            var $button = $j(this);
            var oldValue = $button.parent().find("input").val();

            if ($button.text() == "+") {
                var newVal = parseFloat(oldValue) + 1;
                if (newVal > 1) {
                    $j(".dec").css('background', '#51b352');
                } else {
                    $j(".dec").css('background', '#d3d3d3');
                }
            } else {
                // Don't allow decrementing below zero
                if (oldValue > 1) {
                    newVal = parseFloat(oldValue) - 1;
                    if (newVal > 1) {
                        $j(".dec").css('background', '#51b352');
                    } else {
                        $j(".dec").css('background', '#d3d3d3');
                    }
                } else {
                    newVal = 1;
                }
            }

            $button.parent().find("input").val(newVal);

        });
    });

    $j(function () {
        if ($j('#tab-1').hasClass('active')) {
            var curDesHeight = $j('.description-block').height();
            if (curDesHeight == 800)
                $j('#readmore-description').show();
            else
                $j('#readmore-description').hide();
        }

        if ($j('#tab-4').hasClass('active')) {
            var curWarHeight = $j('.warranty-block').height();
            if (curWarHeight == 800)
                $j('#readmore-warranty').show();
            else
                $j('#readmore-warranty').hide();
        }
    });

    function readMoreDescription() {
        var readmore = $j('#readmore-description');
        var readmoreIcon = $j('#readmore-description-icon');
        if (readmore.text().trim() == 'Xem thêm') {
            readmore.text("Thu gọn");
            readmoreIcon.toggleClass("fa-angle-double-down fa-angle-double-up");
        } else {
            readmore.text("Xem thêm");
            readmoreIcon.toggleClass("fa-angle-double-up fa-angle-double-down");
        }

        $j('.description-block').toggleClass('changed');
        $j('.description-init-height').toggleClass("description-height-auto");
    }

    function readMoreWarranty() {
        var readmore = $j('#readmore-warranty');
        var readmoreIcon = $j('#readmore-warranty-icon');
        if (readmore.text().trim() == 'Xem thêm') {
            readmore.text("Thu gọn");
            readmoreIcon.toggleClass("fa-angle-double-down fa-angle-double-up");
        } else {
            readmore.text("Xem thêm");
            readmoreIcon.toggleClass("fa-angle-double-up fa-angle-double-down");
        }

        $j('.warranty-block').toggleClass('changed');
        $j('.warranty-init-height').toggleClass("warranty-height-auto");
    }

    function goToCommentBlock() {
        // Scroll
        $j('html,body').animate({
                scrollTop: $j('.fb-comments').offset().top - 400
            },
            'slow');
    }
</script>
<script>
    // Add to wishlist button
    function addToWishList() {
        var isLogin = $j('.isLogin').val();
        if (isLogin) {
            var product = $j('.switch').attr('product-id');
            $j('.loading-wish').show();
            $j.ajax({
                type: "POST",
                url: '<?php echo $this->getUrl('favourite/index/addToWishlist') ?>',
                data: {
                    'product': product
                },
                success: function (data) {
                    data = JSON.parse(data);
                    if (data['success']) {
                        $j('#wishlist-content').html("Đã thích&nbsp;");
                        $j('.btn-add-to-wishlist').attr('title', 'Bỏ thích');
                        $j('.btn-add-to-wishlist').addClass('remove-wish-list').removeClass("btn-add-to-wishlist");
                        swal("Thành công!", data.success);
                        setTimeout(function () {
                            swal.close();
                        }, 3000)

                    } else {
                        swal("Không thành công!", data.failed, "error");
                        setTimeout(function () {
                            swal.close();
                        }, 3000)
                    }

                    $j('.loading-wish').hide();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log("Status: " + textStatus);
                    console.log("Error: " + errorThrown);
                    $j('.loading-wish').hide();
                }
            });
        } else {
            $j('#loginModal').modal();
            return;
        }

    }

    function removeFromWishlist() {
        var product = $j('.switch').attr('product-id');
        $j('.loading-wish').show();
        $j('.remove-wish-list').attr('disabled', 'disabled');
        $j.ajax({
            type: "POST",
            url: '<?php echo $this->getUrl('favourite/index/removeFromDetail') ?>',
            data: {
                'product': product
            },
            success: function (data) {
                data = JSON.parse(data);
                if (data['success']) {
                    $j('#wishlist-content').html("Yêu thích&nbsp;");
                    $j('.remove-wish-list').attr('title', 'Yêu thích');
                    $j('.remove-wish-list').removeAttr('disabled');
                    $j('.remove-wish-list').addClass('btn-add-to-wishlist').removeClass("remove-wish-list");

                    swal("Thành công!", data.success);
                    setTimeout(function () {
                        swal.close();
                    }, 3000)

                } else {
                    swal("Không thành công!", data.failed);
                    setTimeout(function () {
                        swal.close();
                    }, 3000)
                }

                $j('.loading-wish').hide();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Status: " + textStatus);
                console.log("Error: " + errorThrown);
                $j('.loading-wish').hide();
            }
        });
    }

    $j('.switch').bind('click', function (e) {
        if ($j(this).hasClass('btn-add-to-wishlist')) {
            addToWishList();
            e.stopPropagation();
        }
        if ($j(this).hasClass('remove-wish-list')) {
            removeFromWishlist();
            e.stopPropagation();
        }
        e.preventDefault();

    });

    $j('.mobile-switch').on('click', function (e) {
        if ($j(this).hasClass('mobile-add')) {
            addToWishList();
            $j(this).addClass('mobile-remove').removeClass('mobile-add');
            e.stopPropagation();
            return;

        }
        if ($j(this).hasClass('mobile-remove')) {
            removeFromWishlist();
            $j(this).addClass('mobile-add').removeClass('mobile-remove');
            e.stopPropagation();
            return;
        }
        e.preventDefault();
    });

    // Close stackbanner (use in static block)
    function motogClose() {
        $j('.stackbanner').hide();
        var timeNow = new Date().getTime();
        localStorage.setItem("motog_closed_product_" + productId, timeNow);
    }

</script>
<script>
    var products = <?php echo json_encode($products); ?>;

    /**
     * Measure a view of product details. This example assumes the detail view occurs on pageload,
     * and also tracks a standard pageview of the details page.
     */
    dataLayer.push({
        'ecommerce': {
            'detail': {
                'actionField': {'list': 'Chi tiết sản phẩm'},
                'products': products
            }
        }
    });
</script>

<script>
    var cartItems = <?php echo json_encode($cartItems); ?>;

    /**
     * A function to handle a click on a checkout button. This function uses the eventCallback
     * data layer variable to handle navigation after the ecommerce data has been sent to Google Analytics.
     */
    function goToCheckout() {
        dataLayer.push({
            'event': 'checkout',
            'ecommerce': {
                'checkout': {
                    'actionField': {'step': 1},
                    'products': cartItems
                }
            },
            'eventCallback': function () {
                document.location = '<?php echo $this->getUrl('checkout/shipping') ?>';
            }
        });
    }
</script>

<script>
    /**
     * Call this function when a user clicks on a product link. This function uses the event
     * callback datalayer variable to handle navigation after the ecommerce data has been sent
     * to Google Analytics.
     * @param {Object} productObj An object representing a product.
     */
    $j('.product-mask').click(function () {
        var id = $j(this).data('id');
        var name = $j(this).data('name');
        var url = $j(this).data('url');
        var price = $j(this).data('price');

        dataLayer.push({
            'event': 'productClick',
            'ecommerce': {
                'click': {
                    'actionField': {'list': 'Giỏ hàng'},
                    'products': [{
                        'name': name.toString(),                      // Name or ID is required.
                        'id': id.toString(),
                        'price': price.toString()
                    }]
                }
            },
            'eventCallback': function () {
                document.location = url;
            }
        });
    });
</script>

<script>
    function setStorage(key, value) {
        var expires = (24 * 60 * 60);  // default: seconds for 1 day
        var now = Date.now();  //millisecs since epoch time, lets deal only with integer
        var schedule = now + expires * 1000;

        try {
            localStorage.setItem(key, value);
            localStorage.setItem(key + '_expiresIn', schedule);
        } catch (e) {
//            console.log('setStorage: Error setting key [' + key + '] in localStorage: ' + JSON.stringify(e));
            return false;
        }
        return true;
    }

    function customizeBuildPC() {
        $j('.bp-ajax-loader-view').show();
        $j('.bp-customize-btn').prop('disabled', true);

        var bundleItems = <?php echo json_encode($bundleItems) ?>;

        setStorage("build_pc_array", JSON.stringify(bundleItems));
        window.location.href = '<?php echo $this->getUrl('buildpc') ?>';
    }

    $j('.btn-share').bind('click', function (e) {
        shareFB();
        e.preventDefault();
        e.stopPropagation();
    });

    function shareFB() {
        FB.ui({
            method: 'feed',
            link: '<?php echo Mage::helper('core/url')->getCurrentUrl(); ?>'
        }, function (response) {
        });
    }
</script>
<script>
    checkCompareListCount();

    $j('.cp-check').attr('checked', true);

    $j('.add-to-compare').on('click', function (e) {
        if ($j('#compare-content').hasClass('no-display')) {
            $j('#compare-content').removeClass('no-display');
        }
        else {
            $j('#compare-content').addClass('no-display');
        }

        var check = $j('.cp-check').is(':checked');

        if (check) {
            //Get the product id name and image
            //Compare with current local Storage
            // add to local Storage
            var productId = $j('.product-id').val();
            var attributeCode = $j('.attributeSetId').val();
            var compareList = localStorage.getItem('compareList');
            if (!compareList) {
                compareList = {};
                compareList.attributeCode = attributeCode;
                compareList.listItem = [];
            } else {
                compareList = JSON.parse(compareList);
                if (compareList.attributeCode != attributeCode && compareList.listItem.length > 0) {
                    swal({
                        title: "Không thành công",
                        text: "Sản phẩm không cùng thuộc tính với danh sách",
                        type: "error",
                        showConfirmButton: false
                    });
                    setTimeout(function () {
                        swal.close();
                    }, 1500);
                    return false;
                }
            }

            var listItem = compareList.listItem;

            var itemNameArray = [];
            for (var i = 0; i < listItem.length; i++) {
                itemNameArray.push(listItem[i].name);
            }

            var currentName = $j('.product').text().trim();
            var currentImage = $j('.imgCompare').val();
            var path = $j('.path').val();
            var currentItem = {
                'url': path,
                'product_id': productId,
                'image_url': currentImage,
                'name': currentName
            };

            if (listItem.length < 4) {

                if (listItem.length == 0) {
                    compareList.attributeCode = attributeCode;
                }

                if (itemNameArray.indexOf(currentItem.name) === -1) {
                    compareList.listItem.push(currentItem);
                }
                compareList = JSON.stringify(compareList);
                localStorage.removeItem('compareList');
                localStorage.setItem('compareList', compareList);

                renderCompareList();
            } else {
                if (itemNameArray.indexOf(currentItem.name) === -1) {
                    swal({
                        title: 'Không thành công',
                        text: 'Chỉ so sánh được tối đa 4 sản phẩm (trong danh sách so sánh đã có 4 sản phẩm rồi)',
                        type: "error",
                        showConfirmButton: false
                    });
                    setTimeout(function () {
                        swal.close();
                    }, 2000);
                }
            }

            $j('.cp-check').attr('checked', false);

        } else {
            $j('.cp-check').attr('checked', true);
        }
        e.preventDefault();
        e.stopPropagation();

        checkCompareListCount();
    });

    $j('.send-compare').on('click', function (e) {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        if (compareList.attributeCode && compareList.listItem.length > 0) {
            var itemParams = [];
            compareList.listItem.forEach(function (item) {
                itemParams.push({
                    'product_id': item.product_id
                });
            });
            compareList.listItem = itemParams;
            var params = btoa(unescape(encodeURIComponent(JSON.stringify(compareList))));
            window.open("<?php echo $this->getUrl('compare/index/compare') ?>?data=" + params, '_blank');
        } else {
            swal({
                title: 'Không thành công',
                text: 'Vui lòng thêm sản phẩm vào danh sách so sánh',
                type: "error",
                showConfirmButton: false
            });
            setTimeout(function () {
                swal.close();
            }, 2000);
            return false;
        }
        e.preventDefault();
        e.stopPropagation();
    });

    function checkCompareListCount() {
        var compareList = JSON.parse(localStorage.getItem('compareList'));
        if (compareList) {
            var listItem = compareList.listItem;
            if (listItem.length >= 2) {
                $j('.send-compare').removeClass('no-display');
            }
            else {
                $j('.send-compare').addClass('no-display');
            }
        }
    }
</script>

<script>
    function stickyCart() {
        $j('.cart-sticky-container').css({
            height: productDetailHeight
        });

        var scrollTop = $j(window).scrollTop();
        var navHeight = $j('.tekshop-topbar').height();
        var cartToTop = $j('.cart-sticky-container').offset().top;
        var cartWidth = $j('.cart-sticky').width();
        var cartHeight = $j('.cart-sticky').height();
        var productDetailHeight = $j('#product-detail-container').height();
        var messageHeight = $j('#messages_product_view').height();

        $j('.cart-sticky-container').css({
            height: productDetailHeight
        });

        if (scrollTop + navHeight > cartToTop) {
            if (scrollTop + cartHeight > productDetailHeight + navHeight + messageHeight) {
                $j('.cart-sticky').css({
                    position: 'absolute',
                    top: 'auto',
                    bottom: 0,
                    width: cartWidth
                })
            } else {
                $j('.cart-sticky').css({
                    position: 'fixed',
                    top: navHeight,
                    width: cartWidth,
                    bottom: 'auto'
                })
            }
        } else {
            $j('.cart-sticky').removeAttr('style');
        }
    }

    $j(document).ready(function () {
        if (win.width() > 993) {
            $j(window).scroll(function () {
                stickyCart()
            });
            $j(window).trigger('scroll');
        } else $j('.cart-sticky').removeAttr('style');
    })
</script>

<script>
    (function ($) {
        $(document).ready(function () {
            //add to bottom of body
            var el = document.createElement('script');
            el.type = 'application/ld+json';
            el.text = JSON.stringify({
                "@context": "http://schema.org",
                "@type": "Product",
                "name": "<?php echo $this->escapeHtml($_product->getName());?>",
                "image": [
                    "<?php echo $this->helper('catalog/image')->init($_product, 'small_image')->resize(300, 300); ?>"
                ],
                "description": '<?php echo preg_replace("/\r|\n/", "", $_product->getShortDescription());?>',
                "sku": "<?php echo $_product->getData()['warehouse_sku'];?>",
                "brand": {
                    "@type": "Thing",
                    "name": "<?php echo $_product->getAttributeText('manufacturer');?>"
                },
                "aggregateRating": {
                    "@type": "AggregateRating",
                    "ratingValue": <?php $rating = 4 + rand(1, 10) / 10; echo $rating; ?>,
                    "reviewCount": <?php $reviewer = rand(100, 200); echo $reviewer; ?>
                },
                "offers": {
                    "@type": "Offer",
                    "priceCurrency": "VND",
                    "price": "<?php echo $_product->getFinalPrice(); ?>",
                    "itemCondition": "http://schema.org/UsedCondition",
                    "availability": "http://schema.org/InStock",
                    "seller": {
                        "@type": "Organization",
                        "name": "Tekshop.vn-Hàng chính hãng, giá tốt, giao hàng nhanh..."
                    }
                }
            });
            document.querySelector('body').appendChild(el);
        });
    })(jQuery);
</script>
