<style>
    .mb{margin-bottom: 10px}
    .ml{margin-left: 20px}
    .w250{width: 250px !important;}
    .w300{width: 300px !important;}
    td p{padding-top: 7px;}
    .import-alert{
        margin-bottom:10px !important;padding: 10px !important;
    }
</style>
<div class"content-header">
<table cellspacing="0">
    <tbody><tr>
        <td style="width:50%;"><h3 class="icon-head head-cms-page"><?php echo $this->__('Import Shipment Status from Excel file')?></h3></td>
    </tr>
    </tbody></table>
</div>
<div class="with-bootstrap">
    <div ng-app="importAdmin" ng-controller="importCtrl as ctrl" class="container-fluid">
        <div class="row" style="padding-bottom: 40px;">
            <div class="col-md-2">
                Chọn Site
            </div>
            <div class="col-md-4">
                <select class="form-control input-sm w250"  ng-model="ctrl.websiteId" ng-change="ctrl.paymentChosen = ''">
                    <option ng-repeat="item in ctrl.websites" value="{{item.website_id}}">{{item.name}}</option>
                </select>
            </div>
            <div class="col-md-6" ng-show="ctrl.paymentChosen">

            </div>

        </div>

        <div class="row" style="padding-bottom: 40px;">
            <div class="col-md-2">
                Chọn ngày thanh toán
            </div>
            <div class="col-md-4">
                <select class="form-control input-sm w250"  ng-model="ctrl.paymentChosen" ng-change="ctrl.choosePayment();">
                    <option ng-repeat="item in ctrl.payments | filter: { website_id: ctrl.websiteId }" value="{{item.id}}">{{item.pay_date}}</option>
                </select>
            </div>
            <div class="col-md-6" ng-show="ctrl.paymentChosen">

            </div>

        </div>

        <div class="row" style="padding-bottom: 30px;" ng-show="ctrl.paymentChosen">
            <div class="col-md-2">
                Số tiền thanh toán
            </div>
            <div class="col-md-4">
                {{ctrl.totalAmount | number:0}}
            </div>

        </div>
        <div class="row" style="padding-bottom: 30px;" ng-show="ctrl.paymentChosen">
            <div class="col-md-2">
                Số tiền có thể nhập import
            </div>
            <div class="col-md-4">
                {{ctrl.allowAmount  | number:0}}
            </div>
        </div>

        <div class="row" style="padding-bottom: 40px;" ng-show="ctrl.paymentChosen">
            <div class="col-md-2">
                Số tiền đã import
            </div>
            <div class="col-md-4">
                {{ctrl.importedAmount  | number:0}}
            </div>
        </div>


        <div class="row" style="padding-bottom: 40px" ng-show="ctrl.paymentChosen">
            <div class="col-md-12">
                <input id="file-input" type="file" class="filestyle" date-size="sm" data-placeholder="Choose XLS/XLSX file" nv-file-select uploader="ctrl.uploader" ng-disabled="ctrl.state!='upload'">
            </div>
        </div>
        <uib-progressbar class="progress-striped active row" value="ctrl.item.progress" ng-show="ctrl.uploader.queue.length == 1">Uploading {{ctrl.item.progress}}%</uib-progressbar>
        <uib-progressbar class="progress-striped active row" value="50" ng-show="ctrl.state=='requestMatching'">Processing</uib-progressbar>
        <uib-progressbar class="progress-striped active row" value="ctrl.importProcess" max="ctrl.row_num" ng-show="state=='importing'">Importing {{ctrl.importProcess}}/{{ctrl.row_num}}</uib-progressbar>
        <div class="row mb" ng-show="ctrl.state!='upload'">
            <button ng-disabled="ctrl.startMatchingDisabled()" ng-if="ctrl.state=='choose'" class="btn btn-success" ng-click="ctrl.startMatching()">
                <span class="glyphicon glyphicon-upload"></span>Start Match
            </button>
            <button ng-if="ctrl.state=='matching'" class="btn btn-success" ng-click="ctrl.startImport()">
                <span class="glyphicon glyphicon-upload"></span>Start Import
            </button>
            <button ng-if="ctrl.state=='finished'" class="btn btn-success" ng-click="ctrl.continueAnotherSheet()">
                <span class="glyphicon glyphicon-upload"></span>Continue with another sheet
            </button>
            <button class="btn btn-warning" ng-if="ctrl.state!='matching'" ng-click="ctrl.cancel()">
                <span class="glyphicon glyphicon-ban-circle"></span>Cancel
            </button>
            <button class="btn btn-warning" ng-if="ctrl.state=='matching'" ng-click="ctrl.chooseAnother()">
                <span class="glyphicon glyphicon-ban-circle"></span>Cancel
            </button>
        </div>
        <div class="row mb" ng-if="ctrl.state=='finished'">
            <label></label>
        </div>
        <uib-alert class="row import-alert" type="danger" ng-repeat="item in ctrl.msg.danger">{{item}}</uib-alert>
        <uib-alert class="row import-alert" type="success" ng-repeat="item in ctrl.msg.detail">{{item}}</uib-alert>
        <div class="row mb" ng-show="ctrl.state=='choose'|| ctrl.state=='requestMatching'|| ctrl.state=='matching'">
            <form class="form-inline">
                <div class="form-group">
                    <label>Choose a Sheet</label>
                    <select class="form-control input-sm w250" ng-disabled="ctrl.state!='choose'" ng-model="ctrl.matched.sheet">
                        <option ng-repeat="item in ctrl.choose.sheets" value="{{item.id}}">{{item.name}}</option>
                    </select>
                </div>
                <div class="form-group ml">
                    <label>Ignore first rows</label>
                    <input type="number" class="form-control" ng-model="ctrl.matched.ignore">
                </div>
            </form>
        </div>
        <div class="row mb" ng-show="ctrl.state=='matching'">
            <table>
                <tr>
                    <td colspan="4"><b>This sheet have {{ctrl.row_num}} rows and {{ctrl.matched.cols.length}} columns. Please choose field and matching column before start import</b></td>
                </tr>
                <tr ng-repeat="col in ctrl.matched.cols">
                    <td>
                        <p>Match column <b>{{col.col}} ({{col.name}})</b></p>
                    </td>
                    <td><p>&nbsp;&nbsp;To Attribute&nbsp;&nbsp;</p></td>
                    <td>
                        <select class="input-sm w300" ng-model="col.matched">
                            <option value="">Not Use</option>
                            <option ng-repeat="attr in ctrl.matched.attrs" value="{{attr.code}}">{{attr.name}} - {{attr.code}} {{attr.unique=='1'?"- Allow update":''}}</option>
                        </select>
                    </td>
                    <td>
                        &nbsp;&nbsp;
                        <label ng-if="ctrl.col.matched == item" ng-repeat="item in ctrl.matched.unique">
                            <input type="checkbox" style="margin-top: -1px" ng-checked="ctrl.matched.updater==item" ng-change="ctrl.changeUpdater(item)" ng-model="ctrl.temp[item]"> Update using this field
                        </label>
                    </td>

                </tr>
            </table>
        </div>
    </div>

</div>
<script type="text/javascript">
    var app = angular.module('importAdmin', ['ui.bootstrap', 'angularFileUpload']);
    app.controller('importCtrl', function (FileUploader, $http) {
        var vm = this;
        var uploader = new FileUploader({removeAfterUpload: true,url:<?php echo json_encode(Mage::getUrl("*/*/upload",array('form_key'=>Mage::getSingleton('core/session')->getFormKey())))?>});
        vm.uploader = uploader;
        vm.item = {progress:0};
        vm.state = "upload";
        vm.choose = {};
        vm.totalAmount = 0;
        vm.allowAmount = 0;
        vm.importedAmount = 0;
        vm.payments = <?php echo $this->getPayments();?>;
        vm.websites = <?php echo $this->getWebsites();?>;
        vm.fileId = 0;
        vm.paymentChosen = 0;

        vm.choosePayment = function(){
            for(var i=0; i< vm.payments.length; i++){
                if(vm.paymentChosen == vm.payments[i].id){
                    vm.totalAmount = vm.payments[i].total_amount;
                    vm.allowAmount = vm.payments[i].total_allow_amount;
                    vm.importedAmount = vm.payments[i].total_imported_amount;
                }
            }
            return;
        };

        resetData();

        uploader.filters.push({
            name: 'fileFilter',
            fn: function(item /*{File|FileLikeObject}*/, options) {
                if(this.queue.length > 1) return false;
                if(item.size > 5*1024*1024) return false;
                var type = ',' + item.name.slice(item.name.lastIndexOf('.') + 1) + ',';
                return (',xls,xlsx,').indexOf(type) !== -1;
            }
        });

        vm.cancel = function(){
            $j("#file-input").filestyle('clear');
            $j("#file-input").filestyle("disabled",false);
            vm.state = 'upload';
            resetData();
        };

        uploader.onAfterAddingFile = function(fileItem) {
            vm.item = fileItem;
            uploader.uploadAll();
        };

        uploader.onSuccessItem = function(fileItem, response, status, headers) {
            var url = <?php echo json_encode(Mage::getUrl("*/*/importing",array('form_key'=>Mage::getSingleton('core/session')->getFormKey())))?>;
            if(response.result == 'error'){
                vm.state = 'error';
                vm.msg.danger.push(response.msg);
                return;
            }
            vm.state = 'choose';
            vm.choose = response.data;
            vm.fileId = response.data.file_id;
            console.log(vm.fileId);
            $j("#file-input").filestyle("disabled",true);
        };

        vm.startMatchingDisabled = function(){
            return vm.state != 'choose' || vm.matched.sheet == null;
        };

        vm.startMatching = function(){
            var url = <?php echo json_encode(Mage::getUrl("*/*/matching",array('form_key'=>Mage::getSingleton('core/session')->getFormKey())))?>;
            var param = {ignore:vm.choose.ignore,file:vm.choose.filename,sheet:vm.matched.sheet};
            vm.state = 'requestMatching';
            $http.get(url + '?' + decodeURIComponent(jQuery.param(param)))
                .then(onSuccessCallback);

            function onSuccessCallback(response) {
                console.log(response.data);
                vm.matched.attrs = response.data.data.attrs;
                vm.matched.cols = response.data.data.cols;
                vm.matched.unique = response.data.data.unique;
                vm.row_num = response.data.data.row_num;
                vm.state = 'matching';
            }
            return true;
        };

        vm.changeUpdater = function(item){
            if(vm.temp[item]){
                vm.matched.updater = item;
            }else{
                vm.matched.updater = "";
            }
            angular.forEach(vm.temp,function(value,key){
                if(key !=item)
                    vm.temp[key] = false;
            });
        };

        vm.startImport = function(){
            vm.msg.danger = [];
            vm.msg.detail = [];
            var url = <?php echo json_encode(Mage::getUrl("*/*/importing",array('form_key'=>Mage::getSingleton('core/session')->getFormKey())))?>;
            var attr = [];
            angular.forEach(vm.matched.cols,function(value){
                if(value.matched != null && value.matched != ''){
                    attr.push({matched:value.matched,col:value.col});
                }
            });
            if(attr.length != 1){
                vm.msg.danger.push("Vui lòng map đúng cột Mã đơn hàng");
                vm.state = 'matching';
                return;
            }
            var rq = {from:vm.matched.ignore+1,file:vm.choose.filename,sheet:vm.matched.sheet,attr:attr,crosscheck_id:vm.paymentChosen,file_id:vm.fileId};
            vm.state = 'importing';
            vm.importProcess = vm.matched.ignore;
            importData(url,rq);
        };

        vm.continueAnotherSheet = function(){
            vm.state = 'choose';
            //delete current sheet
            var currentSheet = vm.matched.sheet;
            angular.forEach(vm.choose.sheets,function(value){
                if(value.id == currentSheet){
                    value.name+=" (Processed)";
                }
            });
            resetData();
        };

        vm.chooseAnother = function(){
            vm.state = 'choose';
        };

        function resetData(){
            vm.matched = {ignore:1};
            vm.row_num = 0;
            vm.importProcess = 0;
            vm.temp = {};
            vm.msg = {danger:[],detail:[]};
        }

        function importData(url,rq){
            if(vm.state != 'importing') return;

            $http.get(url + '?' + decodeURIComponent(jQuery.param(rq)))
                .then(onSuccessCallback, onErrorCallback);

            function onSuccessCallback(response){
                console.log(response.data);
                angular.forEach(response.data.fail,function(item){vm.msg.danger.push(item)});
                angular.forEach(response.data.detail,function(item){vm.msg.detail.push(item)});
                vm.importProcess = rq.from+response.data.total-1;
                vm.importedAmount += response.data.imported_amount;
                rq.from+=response.data.total;
                if(response.data.done=="1") {
                    vm.state = 'finished';
                    return;
                }
                importData(url,rq);
            }

            function onErrorCallback(response){
                console.log(response);
                vm.state = 'matching';
            }

        }
    });
</script>